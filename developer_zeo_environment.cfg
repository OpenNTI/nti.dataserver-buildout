[buildout]
extends =
		webapps.cfg
		haproxy_nginx_environment.cfg
		zeo_environment.cfg
		hypatia.cfg
		badges.cfg
		analytics.cfg
		sites.cfg
		landingpages.cfg
		ims.cfg
		store.cfg
		assessment.cfg

# NOTE: When extending multiple base configs,
# only the parts from the bottom config are
# installed by default (even if they all use 'parts +=').
# So if we want to install parts from both configs,
# we need to explicitly list them.
parts +=
		openssl
		haproxy
		ssl-cert
		nginx
		nginx-conf
		haproxy-conf
		memcached
		npm
		grunt
		nodeserver-env
		nodeserver
		app-minify
		deploy-mobile-app
		client-site-package-conf
		client-site-package
		${site-ALL-nginx:nginx}

[site-sources]
<= site-ALL-sources

[product-sources]
<= product-ALL-sources

[landingpage-sources]
<= landingpage-ALL-sources

[zcml]
package_features += devmode

[eggs]
eggs +=
		tox
		${ims-ALL-eggs:eggs}
		${site-ALL-eggs:eggs}
		${store-ALL-eggs:eggs}
		${badges-ALL-eggs:eggs}
		${hypatia-ALL-eggs:eggs}
		${product-ALL-eggs:eggs}
		${analytics-ALL-eggs:eggs}
		${assessment-ALL-eggs:eggs}

[server-versions]
sites = @HEAD

[landingpage-versions]
connect = branch=master
historychannel = branch=seperate-sites
mathcountsaopsou = branch=master
okstate = branch=master
severeweather = branch=master

[site-versions]
columbia = branch=master
connect = branch=master
janux = branch=master
litworld = branch=master
oc = branch=master
okstate = branch=master
prmia = branch=master
spurstartup = branch=master
symmys = branch=master

[nginx-conf]
nginx_daemon = off
nginx_max_open_files = 1000

[haproxy-conf]
haproxy_backend_port_rewrite =
	# Did the incoming Host header have a port in it? If so,
	# we will want to rewrite outgoing Location headers from nginx to
	# have the right port...nginx would put its own port in if we let
	# it, which is not right for any scenario; turning them off entirely
	# works for production when we are on the default ports, but fails
	# badly for development when we're not.
	# Our stunnel socket is always SSL, and is the only thing that is in development
	acl is_ssl so_id 42

	rspirep ^Location:\ http://([^0-9/].*?)/(.*) Location:\ http://\1:${environment:haproxy_http_port}/\2 unless is_ssl
	rspirep ^Location:\ .*://([^0-9/].*?)/(.*) Location:\ https://\1:${environment-haproxy:ssl_port}/\2 if is_ssl

haproxy_extra_config =
	# Mangle block so the web app can use fancy paths and not freak Nginx out
		reqrep ^([^\ :]*)\ ${environment:webapp_location}[^\ ]*/\ ([^\ ]*) \1\ ${environment:webapp_location}\ \2

[webapp-versions]
NextThoughtWebApp = branch=master

[webapp-conf]
enable_logging = true
enable_global_onerror = false

[init_env]
# For development, install the initial test data and users
args = --with-example

[environment]
cache_servers = localhost:${memcached-conf:memcached-port}

[pserve-conf]
use_devmode = 1
secure_cookies = 0
debug_error_in_html = true
cookie_secret = devmode cookie secret
session_cookie_secret = devmode session cookie secret
pyramid_includes = pyramid_debugtoolbar

[gunicorn-conf]
# Make it easy to debug by using one worker
# and not preloading
workers = 1
preload_app = False

[site-history-nginx]
landingpage_path = ${buildout:root-directory}/sources/nti.content.landingpage.historychannel/client.history-channel/dist

[site-i2-nginx]
extra_config =
	location ~ ^/widgets/([A-Za-z0-9_-]+)$ {
		return 301 $uri_scheme://$host/widgets/$1/;
	}

	location ~ ^/widgets/([A-Za-z0-9_-]+)/$ {
		alias ${buildout:directory}/node_modules/nti-web-widget-$1/dist/;
	}

	location ~ ^/widgets/([A-Za-z0-9_-]+)/(.+)$ {
		alias ${buildout:directory}/node_modules/nti-web-widget-$1/dist/$2;
	}


[site-janux-nginx]
extra_config =
	location ~* /masters/([A-Za-z0-9_-]*)$ {
		return 301 $uri_scheme://$host/masters/$1/;
	}

	location /masters/ {
		proxy_pass http://masters-alpha.ou.edu.s3-website-us-east-1.amazonaws.com/;
		proxy_intercept_errors on;
		error_page 403 @login;
		error_page 404 @login;
	}

[site-okstate-nginx]
extra_config =
	location ~* /courses/([A-Za-z0-9_-]*)$ {
		return 301 $uri_scheme://$host/courses/$1/;
	}

	location /courses/ {
		proxy_pass http://okstate-courses-alpha.nextthought.com.s3-website-us-east-1.amazonaws.com/;
		proxy_intercept_errors on;
		error_page 403 @login;
		error_page 404 @login;
	}

[client-site-package-conf]
recipe = nti.recipes.json
output-file = ${buildout:directory}/package.json
contents-section = client-site-package-conf-main

[client-site-package-conf-main]
name = nti-buildout-alpha
version = 0.0.1
description = NextThought Buildout Developer NodeJS Library
author = NextThought
private = true
dependencies-section = client-site-package-conf-deps

[client-site-package-conf-deps]
nti-client-sites-columbia = *
nti-client-sites-connect = *
nti-client-sites-edbooks = *
nti-client-sites-gen-lab = *
nti-client-sites-i2 = *
nti-client-sites-iled = *
nti-client-sites-janux = *
nti-client-sites-k20 = *
nti-client-sites-litworld = *
nti-client-sites-mathcounts = *
nti-client-sites-movingup = *
nti-client-sites-oc = *
nti-client-sites-okstate = *
nti-client-sites-prmia = *
nti-client-sites-symmys = *
nti-client-sites-santafesouth = *
nti-client-sites-spurstartup = *
nti-client-sites-wiley = *
nti-content-landingpage-connect = *
#nti-content-landingpage-historychannel = file:${buildout:directory}/sources/nti.content.landingpage.historychannel/client.history-channel
nti-content-landingpage-iled = *
nti-content-landingpage-janux = *
nti-content-landingpage-okstate = *
nti-content-landingpage-spurstartup = *
nti-web-service = *

[client-site-package]
recipe = collective.recipe.cmd
on_install = true
on_update = true
site-asset-package = ${buildout:root-directory}
srcdir = ${buildout:root-directory}/sources/
cmds =
	 pushd ${:site-asset-package}
	 export PATH=${buildout:root-directory}/node_modules/.bin:$PATH
	 ${buildout:root-directory}/bin/npm install
	 ${buildout:root-directory}/bin/npm update
	 popd
	 pushd ${:srcdir}/nti.content.landingpage.historychannel/client.history-channel
	 ${buildout:root-directory}/bin/npm install
	 ${buildout:root-directory}/bin/grunt build --environment="alpha" --app-root="https://ou-alpha.nextthought.com/app" --login-root="https://ou-alpha.nextthought.com/login" --widget-root="https://ou-alpha.nextthought.com/widgets"
	 popd

[supervisor]
pserve_group_programs = pserve,hypatia,analytics,metadata
programs +=
		1 nginx ${deployment:bin-directory}/nginx
		1 haproxy ${deployment:bin-directory}/haproxy [-f ${deployment:etc-directory}/haproxy/haproxy.cfg -db]
		${memcached-conf:memcached-supervisor}
		99 analytics ${deployment:bin-directory}/nti_analytics_processor [-v]
		99 hypatia ${deployment:bin-directory}/nti_hypatia_indexer [-v -m ${hypatia-conf:mintime} -x ${hypatia-conf:maxtime} -l ${hypatia-conf:limit}]

# Turn these off for developers since they don't do
# any good, and they probably don't work anyway
[crashmail_pserve]
supervisor =

[fatalmail]
supervisor =
