[buildout]
extends =
	webapps.cfg
    haproxy_nginx_environment.cfg
	hypatia.cfg
    relstorage_environment.cfg
always-checkout = true
# NOTE: When extending multiple base configs,
# only the parts from the bottom config are
# installed by default (even if they all use 'parts +=').
# So if we want to install parts from both configs,
# we need to explicitly list them.
parts +=
	  haproxy
      haproxy-conf
      nginx
      nginx-conf
	  stunnel-cert
	  stunnel
      qp-cron
      memcached
	  senchacmd
	  compass
	  app-minify
	  ext42
	  ext42-link

[extra-sources]
nti.app.products.ou = svn https://repos.nextthought.com/svn/nti-svn/nti.app.products.ou/trunk${server-versions:All}

[site-sources]
<= site-columbia-sources
   site-demo-sources
   site-utsa-sources
   site-law-sources
   site-litworld-sources
   site-personalleadorship-sources
   site-prmia-sources
   site-rwanda-sources
   site-okchristian-sources
   site-mathcounts-sources
   site-symmys-sources
   site-alibra-sources

# We need to include mathcounts sources for old BWC,
# but we do not need to configure it

[product-sources]
<= product-courses-sources


[eggs]
eggs +=
	 ${site-columbia-eggs:eggs}
	 ${site-demo-eggs:eggs}
	 ${site-utsa-eggs:eggs}
	 ${site-law-eggs:eggs}
	 ${site-litworld-eggs:eggs}
	 ${site-personalleadorship-eggs:eggs}
	 ${site-prmia-eggs:eggs}
	 ${site-rwanda-eggs:eggs}
	 ${site-okchristian-eggs:eggs}
	 ${site-mathcounts-eggs:eggs}
	 ${site-symmys-eggs:eggs}
	 ${site-alibra-eggs:eggs}
	 ${product-courses-eggs:eggs}


[webapp-versions]
NextThoughtWebApp = @41590
NextThoughtLoginApp = @39839

[server-versions]
All = @40282

[app-minify]
analytics-key = -a ***REMOVED***

[passwords]
file = prod_passwords.pass.cast5

[relstorages]
shared-blob-dir = false
storages = Users

[relstorages_opts]
sql_adapter_extra_args =
					   port 20004

[relstorages_users_storage_opts]
sql_host = 10.50.10.203
sql_passwd = ${passwords:sql_users_passwd}

[environment]
sql_user = ntiuser
cache_servers = 10.50.8.102:20005
smtp_server = email-smtp.us-east-1.amazonaws.com
smtp_username = AKIAIOO43PY4ANWEYP2Q
smtp_port = 587
global_host_name = prod.nextthought.com
global_content_directory = ${buildout:directory}/../DataserverGlobalLibrary
global_content_location = /content/

nginx_http_port = 20000
nginx_proxy_port = 20002
dataserver_http_port = 20001
haproxy_http_port = 20006
# SAJ: listen to all interfaces to allow load balancers to submit
# decrypted SSL traffic for processing
haproxy_http_addr = 0.0.0.0
haproxy_redirect_to_ssl_port = 20007
stunnel_socket_owner = ntiuser-prod
haproxy_stunnel_socket_user = user ${:stunnel_socket_owner}

# Because of the order of inclusion, we need this here
webapp_path = ${buildout:sources-dir}/NextThoughtWebApp
loginapp_path = ${buildout:sources-dir}/NextThoughtLoginApp

[nginx-conf]
nginx_daemon = off

[haproxy-conf]
haproxy_addl_ssl_acls = acl is_ssl so_id ${environment:haproxy_http_port}

[redis-conf]
port = 20003
redis_client_url = redis://10.50.8.102:${:port}
# Use production-level database
# persistence timing
save-settings =
			  save 900 1
			  save 300 10
			  save 60 10000

[pserve-conf]
email_error_subject_prefix = Prod Error:
dataserver_log_level = INFO
purchase_additional_confirmation_addresses = support@nextthought.com alexv@prmia.org

[gunicorn-conf]
preload_app = true

[memcached-conf]
memcached-port = 20005
extra-opts = -m 4096 -c 4096

[library-conf]
library-type = filesystemLibrary
library-args =
			 directory="${environment:global_content_directory}"
			 prefix="${environment:global_content_location}"

[webapp-conf]
allow_mobile_safari = true
unauth_location = /login/
features =
         "presence-menu": true,
         "custom-status": true,
         "state-transactions": true,
         "mutable-forums": true,
         "v2contacts" : true,
         "v2profiles": true,
         "fancy-scroll": true,
         "notepad": false,
         "transcript-follow-video": true,
		 "notifications": true,
		 "show-open-students-first":true,
		 "analytic-reports":true,
         "remove-history-tab": true

[supervisor]
pserve_group_programs = pserve,hypatia
programs +=
         1 nginx ${deployment:bin-directory}/nginx
         1 haproxy ${deployment:bin-directory}/haproxy [-f ${deployment:etc-directory}/haproxy/haproxy.cfg -db]
         ${memcached-conf:memcached-supervisor}
         99 hypatia ${deployment:bin-directory}/nti_hypatia_indexer [-v -m ${hypatia-conf:mintime} -x ${hypatia-conf:maxtime} -l ${hypatia-conf:limit}]

[boto]
aws_access_key_id = AKIAJVAIKRRDR5CL4OBQ
