[buildout]
extends =
		logrotate.cfg
		prometheus.cfg
		nginx.cfg
		relstorage_environment.cfg
		analytics.cfg
		sites.cfg
		solr.cfg
		credit.cfg
		calendar.cfg
		contentrendering.cfg
		courseware_content.cfg
		invitations.cfg
		presentation.cfg
		nltk.cfg
		prod_server_versions.cfg

always-checkout = true
# NOTE: When extending multiple base configs,
# only the parts from the bottom config are
# installed by default (even if they all use 'parts +=').
# So if we want to install parts from both configs,
# we need to explicitly list them.
parts =
	logrotate-conf
	logrotate-cron
	node_exporter
	statsd_exporter
	on-site-logs-cron
	off-site-logs-cron
	cython
	lxml
	pillow
	eggs
	checkversions
	passwords
	directories
	zcml
	main-conf
	pserve-conf
	gunicorn-conf
	library-conf
	site-assets-conf
	clean-pyc
	roles
	supervisor
	nginx-conf
	relstorages
	tahrir-conf
	${analytics-ALL-ifsta:conf}
	solr-conf
	phantomjs
	imagemagick
	nltk
	nltk_data
	invitations-signer-conf
	stripe-conf
	dataserver-conf

[product-sources]
<= product-courses-sources
	product-integration-ALL-sources

[solr-sources]
<= solr-ALL-sources

[completion-sources]
<= completion-ALL-sources

[credit-sources]
<= credit-ALL-sources

[calendar-sources]
<= calendar-ALL-sources

[site-sources]
<=	site-ifsta-sources

[courseware-ALL-sources]
<=  invitations-ALL-sources
	presentation-ALL-sources
	courseware-content-ALL-sources

[logrotate-cron]
logrotate-bin = /usr/sbin/logrotate

[on-site-logs-cron]
recipe = z3c.recipe.usercrontab
rsync-bin = /usr/bin/rsync
times = 5,20,35,50 * * * *
command = ${:rsync-bin} --numeric-ids -a "${deployment:log-directory}/" "logger1.nti::logs/$HOSTNAME/"

[off-site-logs-cron]
recipe = z3c.recipe.usercrontab
rsync-bin = /usr/bin/rsync
times = 10,25,40,55 * * * *
command = ${:rsync-bin} --numeric-ids -a "${deployment:log-directory}/" "10.50.30.64::logs/assoc/$HOSTNAME/"

[zcml]
package_features += no_avatar
	 				production_env

[eggs]
eggs +=
	${analytics-ALL-eggs:eggs}
	${assessment-ALL-eggs:eggs}
	${badges-ALL-eggs:eggs}
	${completion-ALL-eggs:eggs}
	${contentrendering-MAIN-eggs:eggs}
	${courseware-content-ALL-eggs:eggs}
	${credit-ALL-eggs:eggs}
	${calendar-ALL-eggs:eggs}
	${invitations-ALL-eggs:eggs}
	${presentation-ALL-eggs:eggs}
	${product-courses-eggs:eggs}
	${site-ifsta-eggs:eggs}
	${solr-ALL-eggs:eggs}

[MySQL-python]
environment =
rpath =
library-dirs = /usr/lib
include-dirs = /usr/include

[solr-conf]
files = 785-assoc-solr.zcml

[passwords]
file = assoc_passwords.pass.cast5

[roles]
# Permission some accounts with special capabilities
files += 667-assoc-rolemap.zcml

[relstorages]
shared-blob-dir = false
storages = Users
relstorage-name-prefix = xxx
enable-persistent-cache = true
cache-local-mb = 300
cache-local-dir-count = 16
blob-cache-size = 5gb
commit_lock_timeout = 10

[relstorages_opts]
sql_adapter_extra_args =
					port 3306
					driver gevent MySQLdb

[relstorages_users_storage_opts]
sql_host = db1.assoc
sql_passwd = ${passwords:sql_users_passwd}

[environment]
sql_user = ntiuser
cache_servers =
smtp_server = email-smtp.us-east-1.amazonaws.com
smtp_username = ***REMOVED***
smtp_port = 587
global_host_name = assoc.nextthought.com
global_content_directory = ${buildout:directory}/../DataserverGlobalLibrary
global_content_location = /content/
global_site_assets_directory = ${buildout:directory}/../SiteAssets
global_site_assets_location = /site-assets/

haproxy_http_port = 2080

# Because of the order of inclusion, we need this here
webapp_path = ${buildout:sources-dir}/nti.web.app
loginapp_path = ${buildout:sources-dir}/NextThoughtLoginApp

### StatsD
statsd_port = 9125
statsd_prefix = 'pserve'

[nginx-conf]
# Core Settings
nginx_root = ${environment:global_content_directory}
nginx_user = ntiuser
nginx_workers = 9

default_site_assets = ${buildout:root-directory}/node_modules/@nti/client-sites-default
sites_basedir = ${deployment:run-directory}/www

# Cache options
global_host_name = ""
nginx_ip = 0.0.0.0
nginx_proxy_port = ${environment:nginx_proxy_port}
nginx_http_port = ${environment:nginx_http_port}
nginx_extra_binds =
        listen ${:nginx_http_port};
nginx_dataserver_port = lb.assoc:${environment:haproxy_http_port}
nginx_extra_server_config =
		location /badges/ {
			alias ${buildout:sources-dir}/nti.content.badges/badges/$host/;
		}

[nginx-conf:macosx]
# AIO is not even a directive on osx
aio =

[main-conf]
redis_client_url = redis://redis.assoc:6379
memcached_servers = memcached.assoc:11211

[tahrir]
dbname = Tahrir
user = ntitahrir
twophase = True
autocommit = False
driver = gevent+mysql
host = db1.assoc:3306
password = ${passwords:sql_users_passwd}

[tahrir-conf]
recipe = z3c.recipe.filetemplate
source-directory = templates
dest-directory = ${deployment:root-directory}
files = 888-nti.app.tahrir.zcml

[dataserver-signer]
salt = ${passwords:dataserver_signer_salt}

[stripe]
secret_key = ${passwords:nti_stripe_key}
client_id = ca_1FSbO004zem0zhUJSdNJaYQ5HghVG0T5

[google-oauth]
authorization_url = https://oauth.nextthought.com/google/oauth1

[stripe-oauth]
authorization_url = https://oauth.nextthought.com/stripe/oauth1

[pserve-conf]
email_error_subject_prefix = Assoc Error:
dataserver_log_level = INFO
purchase_additional_confirmation_addresses = support@nextthought.com
email_externally = true
gc_debug = False
gc_disable = False
gc_gen0_threshold = 7000
gc_gen1_threshold = 1000
gc_gen2_threshold = 10000

[gunicorn-conf]
preload_app = true
reuse_port = true
workers = 4

[library-conf]
library-type = filesystemLibrary
library-args =
		directory="${environment:global_content_directory}"
		prefix="${environment:global_content_location}"

[supervisor]
# Disable supervisord based log rotation because we have switched to using logrotate
logfile-maxbytes = 0
childstdout-logfile-maxbytes = 0
childstderr-logfile-maxbytes = 0
# Don't wipe away existing logs
nocleanup = True
pserve_group_programs = pserve,analytics,metadata,solr_indexer,library_renderer,scheduled_job_dispatcher,scheduled_job_executor
programs =
        999 pserve (stopwaitsecs=30) ${deployment:root-directory}/bin/nti_pserve [${:pserve-ini}]
        99 solr_indexer (autostart=false stopwaitsecs=30) ${deployment:bin-directory}/nti_solr_indexer [-v]
        99 analytics (autostart=false stopwaitsecs=30) ${deployment:bin-directory}/nti_analytics_processor [-v]
        99 metadata (autostart=false stopwaitsecs=30) ${deployment:bin-directory}/nti_metadata_processor [-v]
        99 library_renderer (autostart=false stopwaitsecs=30) ${deployment:bin-directory}/nti_library_renderer [-v -r 1 -s 2]
        99 scheduled_job_dispatcher (autostart=false stopwaitsecs=30) ${deployment:bin-directory}/nti_scheduled_dispatcher [-v]
        99 scheduled_job_executor (autostart=false stopwaitsecs=30) ${deployment:bin-directory}/nti_scheduled_executor [-v]
        99 nginx /usr/sbin/nginx [-c ${deployment:etc-directory}/nginx/nginx.conf]
        99 qp_mailer ${deployment:bin-directory}/nti_mailer_qp_process [-v ${deployment:mail-directory}]
        ${prometheus-supervisord:node_exporter}
        ${prometheus-supervisord:statsd_exporter}

[boto]
aws_access_key_id = ***REMOVED***
aws_secret_access_key = ${passwords:aws_secret_access_key}
