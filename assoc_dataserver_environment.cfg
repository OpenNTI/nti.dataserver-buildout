[buildout]
extends =
		logrotate.cfg
		haproxy_nginx_environment.cfg
		relstorage_environment.cfg
		badges.cfg
		analytics.cfg
		sites.cfg
		solr.cfg
		contentrendering.cfg
		courseware_content.cfg

always-checkout = true

# NOTE: When extending multiple base configs,
# only the parts from the bottom config are
# installed by default (even if they all use 'parts +=').
# So if we want to install parts from both configs,
# we need to explicitly list them.
parts =
	logrotate
	logrotate-conf
	logrotate-cron
	libgmp
	pycrypto
	libyaml
	pyyaml
	cython
	lxml
	pillow
	eggs
	checkversions
	passwords
	directories
	zcml
	main-conf
	pserve-conf
	gunicorn-conf
	library-conf
	clean-pyc
	roles
	mysql
	MySQL-python
	supervisor
	nginx
	nginx-conf
	relstorages
	qp-cron
	tahrir-conf
	analytics-ifsta-conf
	solr-conf
	phantomjs
	imagemagick

[site-sources]
<=	site-ifsta-sources

[product-sources]
<= product-courses-sources

[solr-sources]
<= solr-ALL-sources

[courseware-ALL-sources]
<= courseware-content-ALL-sources

[zcml]
package_features += no_avatar
	 				production_env

[eggs]
eggs +=
	${solr-ALL-eggs:eggs}
	${site-ifsta-eggs:eggs}
	${badges-ALL-eggs:eggs}
	${analytics-ALL-eggs:eggs}
	${assessment-ALL-eggs:eggs}
	${product-courses-eggs:eggs}
	${contentrendering-MAIN-eggs:eggs}
	${courseware-content-ALL-eggs:eggs}

[server-versions]
All = @122096
sites = @122096

[solr-conf]
files = 785-assoc-solr.zcml

[passwords]
file = assoc_passwords.pass.cast5

[roles]
# Permission some accounts with special capabilities
files += 667-assoc-rolemap.zcml

[relstorages]
shared-blob-dir = false
storages = Users
enable-persistent-cache = true
cache-local-mb = 300
cache-local-dir-count = 16

[relstorages_opts]
sql_adapter_extra_args =
					port 3306
					driver umysqldb

[relstorages_users_storage_opts]
sql_host = db1.assoc
sql_passwd = ${passwords:sql_users_passwd}

[environment]
sql_user = ntiuser
cache_servers = memcached.assoc:11211
smtp_server = email-smtp.us-east-1.amazonaws.com
smtp_username = AKIAIOO43PY4ANWEYP2Q
smtp_port = 587
global_host_name = assoc.nextthought.com
global_content_directory = ${buildout:directory}/../WritableGlobalLibrary
global_content_location = /content/

nginx_proxy_port = 8085
dataserver_http_port = 8081
haproxy_http_port = 2080

# SAJ: listen to all interfaces to allow load balancers to submit
# decrypted SSL traffic for processing
haproxy_http_addr = 0.0.0.0

# Because of the order of inclusion, we need this here
webapp_path = ${buildout:sources-dir}/nti.web.app
loginapp_path = ${buildout:sources-dir}/NextThoughtLoginApp

[nginx-conf]
recipe = z3c.recipe.filetemplate
source-directory = templates
dest-directory = ${deployment:root-directory}
# the main conf file is already installed
# as part of building nginx, we must overwrite it
force-overwrite = true
files = nginx.conf dataserver_caching.conf

#Core Settings
nginx_daemon = off
nginx_user = ntiuser
nginx_workers = 9
aio = aio on;

#Logging knobs
nginx_access_log = /dev/stdout
nginx_access_log_options = main buffer=4k flush=1m
nginx_error_log = /dev/stderr
nginx_error_log_level = warn

#PID file
nginx_pidfile = ${deployment:run-directory}/nginx.pid

# How many files to keep in the open cache. This should be
# at least 60K in production (smaller in dev where ulimits
# are usually not set up)
nginx_max_open_files = 60000

# Cache options
global_host_name = ""
global_content_directory = ${buildout:directory}/../WritableGlobalLibrary
global_content_origin = http://content-origin1.assoc:8080
hosted_badge_images_directory = ${environment:hosted_badge_images_directory}
hosted_badge_images_location = ${environment:hosted_badge_images_location}
nginx_ip = 0.0.0.0
nginx_proxy_port = ${environment:nginx_proxy_port}
nginx_extra_binds =
nginx_dataserver_port = lb.assoc:${environment:haproxy_http_port}
nginx_cache_path = ${deployment:cache-directory}/nginx
nginx_cache_options = max_size=1g inactive=60m use_temp_path=off
nginx_extra_server_config =

[nginx-conf:macosx]
# AIO is not even a directive on osx
aio =

[main-conf]
redis_client_url = redis://redis.assoc:6379

[tahrir]
dbname = Tahrir
user = ntitahrir
twophase = True
autocommit = False
driver = mysql+pymysql
host = db1.assoc:3306
password = ${passwords:sql_users_passwd}

[tahrir-conf]
recipe = z3c.recipe.filetemplate
source-directory = templates
dest-directory = ${deployment:root-directory}
files = 888-nti.app.tahrir.zcml

[analytics-ifsta-conf]
host = db1.assoc:3306

[pserve-conf]
email_error_subject_prefix = Assoc Error:
dataserver_log_level = INFO
purchase_additional_confirmation_addresses = support@nextthought.com
email_externally = true

[gunicorn-conf]
preload_app = true

[library-conf]
library-type = filesystemLibrary
library-args =
			directory="${environment:global_content_directory}"
			prefix="${environment:global_content_location}"

[supervisor]
# Disable supervisord based log rotation because we have switched to using logrotate
logfile-maxbytes = 0
childstdout-logfile-maxbytes = 0
childstderr-logfile-maxbytes = 0
# Don't wipe away existing logs
nocleanup = True
pserve_group_programs = pserve,analytics,metadata,solr_indexer,library_renderer
programs =
        999 pserve ${deployment:root-directory}/bin/nti_pserve [${:pserve-ini}]
        99 solr_indexer (autostart=false) ${deployment:bin-directory}/nti_solr_indexer [-v]
        99 analytics (autostart=false) ${deployment:bin-directory}/nti_analytics_processor [-v]
        99 metadata (autostart=false) ${deployment:bin-directory}/nti_metadata_processor [-v --slugs]
        99 nginx ${deployment:bin-directory}/nginx
        99 library_renderer ${deployment:bin-directory}/nti_library_renderer [-v -r 1 -s 2]

[boto]
aws_access_key_id = AKIAJVAIKRRDR5CL4OBQ
aws_secret_access_key = ${passwords:aws_secret_access_key}

