[buildout]
extends =
		logrotate.cfg
		supervisor.cfg
		nginx.cfg

parts =
		logrotate
		logrotate-conf
		logrotate-cron
		directories
		zlib
		pcre
		openssl
		nginx
		supervisor
		nginx-conf
		financialplan-nginx-conf
		housing-nginx-conf
		scholarship-nginx-conf
		nodeserver-env
		financialplan-env
		node-package-conf
		node-packages

# We manage our checkouts using mr.developer, which
# easily allows pinning versions (revision=XXX)
# and provides the 'develop' command with many
# useful actions (like 'rebuild)
# See https://pypi.python.org/pypi/mr.developer/
extensions = mr.developer
mr.developer-threads = 35
sources-dir = sources
auto-checkout = *

[sources]
nti.recipes.json = git git@github.com:NextThought/nti.recipes.json.git branch=master
z3c.recipe.filetemplate = git https://github.com/NextThought/z3c.recipe.filetemplate.git branch=master

[nginx-conf]
recipe = z3c.recipe.filetemplate
source-directory = templates
dest-directory = ${deployment:root-directory}
# the main conf file is already installed
# as part of building nginx, we must overwrite it
force-overwrite = true
files = nginx.conf

# Whether nginx should daemonize. Set it to
# off if you will be controlling it with
# supervisor, on if system will control it
nginx_daemon = off
aio = aio on;

nginx_user = ntiuser
nginx_workers = 9

nginx_ip = 0.0.0.0
nginx_proxy_port = 8085
nginx_http_port = 8080
nginx_extra_binds = 
        listen ${:nginx_http_port};

# How many files to keep in the open cache. This should be
# at least 60K in production (smaller in dev where ulimits
# are usually not set up)
nginx_max_open_files = 60000

# Block to allow addition nginx configuration is special scenarios
nginx_extra_server_config = #

#Logging knobs
nginx_access_log = /dev/stdout
nginx_access_log_options = main buffer=4k flush=1m
nginx_error_log = /dev/stderr
nginx_error_log_level = warn

#PID file
nginx_pidfile = ${deployment:run-directory}/nginx.pid

[nginx-conf:macosx]
# AIO is not even a directive on osx
aio =

[financialplan-nginx-conf]
recipe = z3c.recipe.filetemplate
source-directory = templates
dest-directory = ${deployment:root-directory}
force-overwrite = true
files = ou-financialplan.conf

nginx_host_name = financialsuccess.ou.edu financialplan.nextthought.com
root_path = ${buildout:directory}/node_modules/nti-web-oubound-financialplan/dist/client
nodeapp_path = ${buildout:directory}/node_modules/nti-web-oubound-financialplan
extra_config = 

[housing-nginx-conf]
recipe = z3c.recipe.filetemplate
source-directory = templates
dest-directory = ${deployment:root-directory}
force-overwrite = true
files = ou-housing.conf

nginx_host_name = housingcontract.ou.edu housing.nextthought.com
root_path = ${buildout:directory}/node_modules/nti-web-oubound-housing/dist/client
nodeapp_path = ${buildout:directory}/node_modules/nti-web-oubound-housing
extra_config = 

[scholarship-nginx-conf]
recipe = z3c.recipe.filetemplate
source-directory = templates
dest-directory = ${deployment:root-directory}
force-overwrite = true
files = oubound.conf

nginx_host_name = genius.ou.edu genius.nextthought.com
nginx_root = ${buildout:directory}/node_modules/nti-web-oubound-scholarship/dist

[node-service-env]
address = 0.0.0.0
port = 8083

[nodeserver-env]
recipe = nti.recipes.json
output-file = ${buildout:directory}/etc/nodeserver-housing-env.json
contents-section = nodeserver-env-root

[nodeserver-env-root]
production-section = nodeserver-env-production

[nodeserver-env-production]
mode = production
server = http://lb.oubound-prod:2080/dataserver2/
port = 8083
apps =
    housing-app-section
    **end-list**

[housing-app]
appName = OU Housing App
appId = com.nextthought.oubound.housing
analyticsKey = UA-25900586-13
package = nti-web-oubound-housing
basepath = /
SKIP_FRIENDSLISTS = true

[financialplan-env]
recipe = nti.recipes.json
output-file = ${buildout:directory}/etc/nodeserver-financialplan-env.json
contents-section = financialplan-env-root

[financialplan-env-root]
production-section = financialplan-env-production

[financialplan-env-production]
mode = production
server = http://lb.oubound-prod:2080/dataserver2/
port = 8084
apps =
    financialplan-app-section
    **end-list**

[financialplan-app]
appName = OU Financial Planning App
appId = com.nextthought.oubound.financialplan
analyticsKey = UA-25900586-15
package = nti-web-oubound-financialplan
basepath = /
SKIP_FRIENDSLISTS = true

[node-package-conf]
recipe = nti.recipes.json
output-file = ${buildout:directory}/package.json
contents-section = node-package-conf-main

[node-package-conf-main]
name = nti-buildout-oubound-prod
version = 0.0.1
description = NextThought OUBound Prod NodeJS Library
author = NextThought
private = true
dependencies-section = node-package-conf-deps

[node-package-conf-deps]
nti-web-oubound-financialplan = alpha
nti-web-oubound-housing = 1.5.0
nti-web-oubound-scholarship = 1.5.0
nti-web-service = 1.4.4

[node-packages]
recipe = collective.recipe.cmd
on_install = true
on_update = true
site-asset-package = ${buildout:root-directory}
srcdir = ${buildout:root-directory}/sources/
cmds =
	npm install
	npm update

[build-web-content]
recipe = collective.recipe.cmd
on_install = true
on_update = true
site-asset-package = ${buildout:root-directory}
srcdir = ${buildout:root-directory}/sources/
cmds =
	 pushd ${:srcdir}/nti.web.oubound.scholarship
	 export PATH=${buildout:root-directory}/node_modules/.bin:$PATH
	 ${buildout:root-directory}/bin/npm install
	 ${buildout:root-directory}/bin/npm run prepublish
	 popd

[supervisor]
supervisord-environment =
						NODE_ENV=production
# Disable supervisord based log rotation because we have switched to using logrotate
logfile-maxbytes = 0
childstdout-logfile-maxbytes = 0
childstderr-logfile-maxbytes = 0
# Don't wipe away existing logs
nocleanup = True
groups =
	   999 node housing,financialplan
programs =
		1 nginx ${deployment:bin-directory}/nginx
		1 housing /usr/bin/node [${deployment:root-directory}/node_modules/nti-web-service/ -l ${node-service-env:address} --protocol proxy --config ${nodeserver-env:output-file}] ${deployment:root-directory}
		1 financialplan /usr/bin/node [${deployment:root-directory}/node_modules/nti-web-service/ -l ${node-service-env:address} --protocol proxy --config ${financialplan-env:output-file}] ${deployment:root-directory}

