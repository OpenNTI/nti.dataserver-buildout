[buildout]
# A mixin for configuring the webapps

[senchacmd]
# NOTE: As of 4.0.1.45, senchacmd ships with an outdated
# SASS gem, meaning it won't compile our CSS.
# So our tarball is customized to contain a newer
# SASS version in extensions/sencha-compass/.
# However, we also directly install a raw `compass`
# executable too
recipe = hexagonit.recipe.download
url = https://s3.amazonaws.com/dev.nextthought.com/senchacmd-40145-osx.tar.bz2
strip-top-level-dir = true

[senchacmd:linux]
url = https://s3.amazonaws.com/dev.nextthought.com/senchacmd-40145-lx64.tar.bz2

[ext42]
recipe = hexagonit.recipe.download
# The webapp needs to be at least 31028 or we get
# layout issues. See https://trello.com/c/wnXVSaEj
url = https://s3.amazonaws.com/dev.nextthought.com/ext-4.2.0.663.tar.bz2
strip-top-level-dir = true

[ext42-link]
# The webapp depends on having ext-4.2 as a top-level
# link inside its checkout
recipe = collective.recipe.cmd
on_install = true
cmds = ln -s ${ext42:location} ${environment:webapp_path}/src/main/ext-4.2

[environment]
webapp_path = ${buildout:sources-dir}/NextThoughtWebApp
loginapp_path = ${buildout:sources-dir}/NextThoughtLoginApp
mobileweb_path = ${buildout:sources-dir}/nti.web.mobile

[compass]
# Install compass and all of its known dependencies.
# When this is done you can run it by `GEM_HOME=parts/compass/ bin/compass`

# Do this one at a time,
# because we can't specify versions in bulk without resorting
# to a 'gem api file'.
recipe = collective.recipe.cmd
on_install = true
# --no-document is preferred, but --no-rdoc and --no-ri are needed to work
# with the ancient version of gem installed on the production machines
args =  --no-rdoc --no-ri -i ${buildout:parts-directory}/compass -n ${deployment:bin-directory} --ignore-dependencies
cmds =
	 gem install oily_png --version 1.1.0 ${:args}
	 gem install chunky_png --version 1.2.9 ${:args}
	 gem install fssm --version 0.2.10  ${:args}
	 gem install sass --version 3.2.19  ${:args}
	 gem install compass --version 0.12.7   ${:args}

[app-minify]
# Let us configure and control the analytics keys, path to senchacmd,
# etc. This could be lots better...
# FIXME: If you use jdk8 < b121, running app-minify.py ultimately fails with a typically useless error (with debug output on):
#   [INF] accumulating symbols for file /Users/jmadden/Projects/NextThoughtPlatform/nti.dataserver-buildout/parts/ext42/src/AbstractComponent.js
#   [ERR] Error executing page compilation com.sencha.exceptions.BasicException: com.sencha.exceptions.ExEval: javax.script.ScriptException: [object Error] in <eval> at line number 1
recipe = z3c.recipe.filetemplate
source-directory = templates
dest-directory = ${deployment:root-directory}
files = app-minify

python = ${deployment:bin-directory}/python
# Set this to "-a THEKEY" to get analytics added
analytics-key =
# Set this to --closure to get the closure compiler
closure =
# Set this to --itunes=XXX to get an iOS safari banner for an app
itunes =

[webapp-versions]
#The rev argument for git repos in mr.developer
NextThoughtWebApp = master 
NextThoughtLoginApp =
MobileApp =

[webapp-sources]
NextThoughtWebApp = git https://repos.nextthought.com/git/nti.web.app rev=${webapp-versions:NextThoughtWebApp} egg=false
NextThoughtLoginApp = svn https://repos.nextthought.com/svn/nti-svn/NextThoughtLoginApp/trunk${webapp-versions:NextThoughtLoginApp} egg=false
nti.web.mobile = git https://repos.nextthought.com/git/nti.web.mobile rev=${webapp-versions:MobileApp} egg=false

[loginapp-file-links]
# As a convenience for developers, this part can link the .in
# files to their plain 'deployed' files
recipe = collective.recipe.cmd
on_install = true
cmds = for i in ${buildout:sources-dir}/NextThoughtLoginApp/src/main/WebApp/*.in; do ln -sf $i `dirname $i`/`basename $i .in`; done

[webapp-file-links]
# As a convenience for developers, this part can link the .in
# files to their plain 'deployed' files
recipe = collective.recipe.cmd
on_install = true
cmds = for i in ${environment:webapp_path}/src/main/*.in; do  ln -sf $i `dirname $i`/`basename $i .in`; done

[grunt]
recipe = gp.recipe.node
npms =  grunt-cli

[bower]
recipe = gp.recipe.node
npms = bower

[nodeserver-env]
recipe = z3c.recipe.filetemplate
source-directory = templates
dest-directory = ${deployment:root-directory}
force-overwrite = true
files = nodeserver-env.json
http-port = ${environment:nodejs_http_port}
node-ip = 127.0.0.1
dataserver-ip = 127.0.0.1
dataserver-port = ${environment:haproxy_http_port}
user-agreement-url = https://docs.google.com/a/nextthought.com/document/pub?id=1rM40we-bbPNvq8xivEKhkoLE7wmIETmO4kerCYmtISM&embedded=true
analytics-key =
app-version =
app-name = nextthought mobile
app-id = com.nextthought.mobile.general
environment = uat

[nodeserver]
recipe = collective.recipe.cmd
on_install = true
on_update = false
cmds =
	 pushd ${deployment:root-directory}/sources/nti.web.mobile
	 ${deployment:bin-directory}/npm install
	 ${deployment:bin-directory}/bower install
	 ln -s ${deployment:etc-directory}/nodeserver/nodeserver-env.json src/server/config/env.json
	 ${deployment:bin-directory}/grunt build --environment ${nodeserver-env:environment}
	 popd

[deploy-mobile-app]
recipe = z3c.recipe.filetemplate
source-directory = templates
dest-directory = ${deployment:root-directory}
files = deploy-mobile-app
