[buildout]
extends =
	logrotate.cfg
	webapps.cfg
	haproxy_nginx_environment.cfg
	relstorage_environment.cfg
	hypatia.cfg
	badges.cfg
	analytics.cfg
	sites.cfg
	landingpages.cfg
	ims.cfg

always-checkout = true
# NOTE: When extending multiple base configs,
# only the parts from the bottom config are
# installed by default (even if they all use 'parts +=').
# So if we want to install parts from both configs,
# we need to explicitly list them.
parts +=
	logrotate
	logrotate-conf
	logrotate-cron
	nginx
	nginx-conf
	qp-cron
	memcached
	npm
	app-minify
	tahrir-conf
	analytics-conf
	analytics-changemaker-conf
	analytics-columbia-conf
	analytics-greatexpectations-conf
	analytics-i2-conf
	analytics-iled-conf
	analytics-k20-conf
	analytics-litworld-conf
	analytics-movingup-conf
	analytics-ona-conf
	analytics-osde-conf
	analytics-prmia-conf
	analytics-spurstartup-conf
	deploy-mobile-app
	client-site-package-conf
	client-site-package
	nodeserver-env
	nodeserver
	feed-utility-conf
	site-alpha-nginx
	site-changemaker-nginx
	site-columbia-nginx
	site-connect-nginx
	site-edbooks-nginx
	site-genlab-nginx
	site-greatexpectations-nginx
	site-i2-nginx
	site-iled-nginx
	site-janux-nginx
	site-k20-nginx
	site-litworld-nginx
	site-movingup-nginx
	site-oc-nginx
	site-okstate-nginx
	site-ona-nginx
	site-osde-nginx
	site-prmia-nginx
	site-santafesouth-nginx
	site-spurstartup-nginx
	site-symmys-nginx

[product-sources]
<=	product-ou-sources
	product-courses-sources

[site-sources]
<=	site-alpha-sources
	site-augs-sources
	site-changemaker-sources
	site-columbia-sources
	site-connect-sources
	site-edbooks-sources
	site-genlab-sources
	site-greatexpectations-sources
	site-history-sources
	site-i2-sources
	site-iled-sources
	site-k20-sources
	site-litworld-sources
	site-movingup-sources
	site-okchristian-sources
	site-okstate-sources
	site-ona-sources
	site-osde-sources
	site-performance-sources
	site-prmia-sources
	site-santafesouth-sources
	site-spurstartup-sources
	site-symmys-sources

[zcml]
# Temporarily let non-ou-enrolled students have all assignments
package_features +=
	no_avatar

[eggs]
eggs +=
	${analytics-ALL-eggs:eggs}
	${badges-ALL-eggs:eggs}
	${hypatia-ALL-eggs:eggs}
	${product-ou-eggs:eggs}
	${product-courses-eggs:eggs}
	${site-alpha-eggs:eggs}
	${site-augs-eggs:eggs}
	${site-changemaker-eggs:eggs}
	${site-columbia-eggs:eggs}
	${site-connect-eggs:eggs}
	${site-edbooks-eggs:eggs}
	${site-genlab-eggs:eggs}
	${site-greatexpectations-eggs:eggs}
	${site-history-eggs:eggs}
	${site-i2-eggs:eggs}
	${site-iled-eggs:eggs}
	${site-k20-eggs:eggs}
	${site-litworld-eggs:eggs}
	${site-movingup-eggs:eggs}
	${site-okchristian-eggs:eggs}
	${site-okstate-eggs:eggs}
	${site-ona-eggs:eggs}
	${site-osde-eggs:eggs}
	${site-performance-eggs:eggs}
	${site-prmia-eggs:eggs}
	${site-santafesouth-eggs:eggs}
	${site-spurstartup-eggs:eggs}
	${site-symmys-eggs:eggs}
	${site-genlab-eggs:eggs}

[webapp-versions]
NextThoughtWebApp =  branch=release/2016-10-13
NextThoughtLoginApp = @88791
MobileApp = branch=release/2016-10-13

[versions]
ZEO = 5.0.1
ZODB = 5.0.0

[server-versions]
All = @100715
sites = @100715

[landingpage-versions]
connect = branch=master
historychannel = branch=seperate-sites
mathcountsaopsou = branch=master
okstate = branch=master
severeweather = branch=master
spurstartup = branch=master

[app-minify]
# Set this to --itunes=XXX to get an iOS safari banner for an app
itunes = --itunes=795983686

[nodeserver-env]
app-version = ${webapp-versions:MobileApp}
node-ip = 0.0.0.0
dataserver-ip = 10.50.0.50
dataserver-port = ${environment:haproxy_http_port}

[passwords]
file = ou_passwords.pass.cast5

[roles]
# Permission some accounts with special capabilities
files += 667-alpha-rolemap.zcml

[relstorages]
shared-blob-dir = false
storages = Users Users_1_Test Users_2_Test

[relstorages_opts]
sql_adapter_extra_args =
					port 20044
					driver umysqldb

[relstorages_users_storage_opts]
sql_host = 10.50.2.50
sql_passwd = ${passwords:sql_users_passwd}

[relstorages_users_1_test_storage_opts]
sql_host = 10.50.2.50
sql_passwd = ${passwords:sql_users_1_passwd}

[relstorages_users_2_test_storage_opts]
sql_host = 10.50.2.50
sql_passwd = ${passwords:sql_users_2_passwd}

[environment]
sql_user = ntiuser
cache_servers = 10.50.0.50:20045
smtp_server = email-smtp.us-east-1.amazonaws.com
smtp_username = AKIAIOO43PY4ANWEYP2Q
smtp_port = 587
global_host_name = alpha.nextthought.com
global_content_directory = ${buildout:directory}/../DataserverGlobalLibrary
global_content_location = /content/

nginx_proxy_port = 20042
dataserver_http_port = 20041
nodejs_http_port = 20048
haproxy_http_port = 20040

# SAJ: listen to all interfaces to allow load balancers to submit
# decrypted SSL traffic for processing
haproxy_http_addr = 0.0.0.0

# Because of the order of inclusion, we need this here
webapp_path = ${buildout:sources-dir}/nti.web.app
loginapp_path = ${buildout:sources-dir}/NextThoughtLoginApp

[environment-haproxy]
proxy_port = 20046

[nginx-conf]
nginx_dataserver_port = 10.50.0.50:${environment:haproxy_http_port}
nginx_daemon = off
nginx_ip = 0.0.0.0
nginx_extra_binds =

[main-conf]
redis_client_url = redis://10.50.0.50:${redis-conf:port}

[redis]
url = http://download.redis.io/releases/redis-3.0.7.tar.gz

[redis-conf]
port = 20043

# Use production-level database
# persistence timing
save-settings =
			save 900 1
			save 300 10
			save 60 10000

[tahrir]
dbname = Tahrir
user = ntitahrir
twophase = True
autocommit = False
driver = mysql+pymysql
host = 10.50.2.50:20044
password = ${passwords:sql_users_passwd}

[tahrir-conf]
recipe = z3c.recipe.filetemplate
source-directory = templates
dest-directory = ${deployment:root-directory}
files = 888-nti.app.tahrir.zcml

[analytics]
dbname = Analytics
user = ntianalytics
twophase = True
autocommit = False
driver = mysql+pymysql
host = 10.50.2.50:20044
password = ${passwords:sql_users_passwd}

[analytics-conf]
recipe = z3c.recipe.filetemplate
source-directory = templates
dest-directory = ${deployment:root-directory}
files = 777-nti.app.analytics.zcml

[analytics-changemaker-conf]
host = 10.50.2.50:20044

[analytics-columbia-conf]
host = 10.50.2.50:20044

[analytics-k20-conf]
host = 10.50.2.50:20044

[analytics-prmia-conf]
host = 10.50.2.50:20044

[analytics-spurstartup-conf]
host = 10.50.2.50:20044

[analytics-greatexpectations-conf]
host = 10.50.2.50:20044

[analytics-i2-conf]
host = 10.50.2.50:20044

[analytics-iled-conf]
host = 10.50.2.50:20044

[analytics-litworld-conf]
host = 10.50.2.50:20044

[analytics-movingup-conf]
host = 10.50.2.50:20044

[analytics-ona-conf]
host = 10.50.2.50:20044

[analytics-osde-conf]
host = 10.50.2.50:20044

[pserve-conf]
email_error_subject_prefix = OU-Test Error:
i2_enrollment_addresses = nti-testing@nextthought.com josh.zuech@nextthought.com

[gunicorn-conf]
preload_app = true
workers = 6

[memcached-conf]
memcached-port = 20045
extra-opts = -m 4096 -c 4096

[memcached-conf:platform.node() != 'aux1-ou.internal.nextthought.com']
# For all the machines except the one named in cache_servers,
# there's no need to actually run the daemon.
# This same technique can be used to handle cron settings like
# ZODB packing
memcached-supervisor =

[redis-conf:platform.node() != 'aux1-ou.internal.nextthought.com']
redis-supervisor =

[library-conf]
library-type = filesystemLibrary
library-args =
		directory="${environment:global_content_directory}"
		prefix="${environment:global_content_location}"

[webapp-conf]
allow_mobile_safari = true
unauth_location = /login/
features =
		"presence-menu": true,
		"custom-status": true,
		"state-transactions": true,
		"mutable-forums": true,
		"v2contacts" : true,
		"v2profiles": true,
		"fancy-scroll": true,
		"v3matching":true,
		"notepad": false,
		"transcript-follow-video": true,
		"show-open-students-first": false,
		"threaded-forums":true,
		"video-settings":true,
		"bulk-resolve-users": true,
		"request-alias-change": true,
		"kaltura.progressive": true,
		"remove-history-tab": true,
		"notifications": true,
		"badges":true,
		"analytic-reports":true,
		"capture-analytics":true,
		"sync-pageinfo-and-outlinenode":true,
		"hide-add-books":true,
		"default-avatar-to-initials":true,
		"chat-history":false,
		"section-switcher":true,
		"instructor-email":true,
		"email-verification":true,
		"file-upload":true,
		"profile-activity-filters":true,
		"symmys-test.nextthought.com": {
			"disable-context-in-activity":true
		}

obscure_usernames = true

# Open external PDF Content Card links in a new tab
external_pdf_new_window = true

[site-i2-nginx]
extra_config =
	location ~ ^/widgets/([A-Za-z0-9_-]+)$ {
		return 301 $uri_scheme://$host/widgets/$1/;
	}

	location ~ ^/widgets/([A-Za-z0-9_-]+)/$ {
		alias ${buildout:directory}/node_modules/nti-web-widget-$1/dist/;
	}

	location ~ ^/widgets/([A-Za-z0-9_-]+)/(.+)$ {
		alias ${buildout:directory}/node_modules/nti-web-widget-$1/dist/$2;
	}

[site-janux-nginx]
extra_config =
	location ~* /masters/([A-Za-z0-9_-]*)$ {
		return 301 $uri_scheme://$host/masters/$1/;
	}

	location /masters/ {
		proxy_pass http://masters-test.ou.edu.s3-website-us-east-1.amazonaws.com/;
		proxy_intercept_errors on;
		error_page 403 @login;
		error_page 404 @login;
	}

[site-okstate-nginx]
extra_config =
	location ~* /courses/([A-Za-z0-9_-]*)$ {
		return 301 $uri_scheme://$host/courses/$1/;
	}

	location /courses/ {
		proxy_pass http://okstate-courses-test.nextthought.com.s3-website-us-east-1.amazonaws.com/;
		proxy_intercept_errors on;
		error_page 403 @login;
		error_page 404 @login;
	}

[client-site-package-conf]
recipe = nti.recipes.json
output-file = ${buildout:directory}/package.json
contents-section = client-site-package-conf-main

[client-site-package-conf-main]
name = nti-buildout-uat
version = 0.0.1
description = NextThought Buildout UAT NodeJS Library
author = NextThought
private = true
dependencies-section = client-site-package-conf-deps

[client-site-package-conf-deps]
nti-client-sites-alpha = ^1.0
nti-client-sites-changemaker = ^1.0
nti-client-sites-columbia = ^0.0
nti-client-sites-connect = ^0.0
nti-client-sites-edbooks = ^0.0
nti-client-sites-gen-lab = ^0.0
nti-client-sites-greatexpectations = ^1.0
nti-client-sites-i2 = ^0.8
nti-client-sites-iled = ^0.0
nti-client-sites-janux = ^1.0
nti-client-sites-k20 = ^0.0
nti-client-sites-litworld = ^0.0
nti-client-sites-mathcounts = ^0.0
nti-client-sites-movingup = ^1.0
nti-client-sites-oc = ^0.0
nti-client-sites-okstate = ^0.0
nti-client-sites-ona = ^1.0
nti-client-sites-osde = ^0.0
nti-client-sites-prmia = ^0.0
nti-client-sites-santafesouth = ^0.0
nti-client-sites-symmys = ^0.0
nti-client-sites-spurstartup = ^0.0
nti-content-landingpage-connect = ^1.0
nti-content-landingpage-iled = ^1.0
nti-content-landingpage-janux = ^1.0
nti-content-landingpage-okstate = ^1.0
nti-web-service = 1.1.1 

[client-site-package]
recipe = collective.recipe.cmd
on_install = true
on_update = true
site-asset-package = ${buildout:root-directory}
srcdir = ${buildout:root-directory}/sources/
cmds =
	 pushd ${:site-asset-package}
	 export PATH=${buildout:root-directory}/node_modules/.bin:$PATH
	 ${buildout:root-directory}/bin/npm install
	 ${buildout:root-directory}/bin/npm update
	 popd

[feed-utility-conf]
recipe = z3c.recipe.filetemplate
source-directory = templates
dest-directory = ${deployment:root-directory}
files = fetch_feed

[supervisor]
pserve_group_programs = pserve,hypatia,analytics,metadata
programs +=
		1 nginx ${deployment:bin-directory}/nginx
		1 node ${deployment:bin-directory}/node [${deployment:root-directory}/node_modules/nti-web-service/ -l ${nodeserver-env:node-ip} -p ${nodeserver-env:http-port} --dataserver-host ${nodeserver-env:dataserver-ip} --dataserver-port ${nodeserver-env:dataserver-port} --protocol proxy --config ${deployment:root-directory}/etc/nodeserver/nodeserver-env.json]
		${memcached-conf:memcached-supervisor}
		99 hypatia ${deployment:bin-directory}/nti_hypatia_indexer [-v -m ${hypatia-conf:mintime} -x ${hypatia-conf:maxtime} -l ${hypatia-conf:limit}]
		99 analytics ${deployment:bin-directory}/nti_analytics_processor [-v --site janux.ou.edu]

[boto]
aws_access_key_id = AKIAJVAIKRRDR5CL4OBQ
