[buildout]
extends = base_environment.cfg
parts +=
	  zeo_dirs
	  zeo
	  supervisor
	  zodb_conf
	  zodb_uri_conf

[zeo_dirs]
recipe = z3c.recipe.mkdir
paths = ${user_storage:blob_dir}
mode = 0700

[base_storage]
name = BASE
number = 0
data_dir = ${deployment:data-directory}
blob_dir = ${:data_dir}/${:name}.blobs
server_zcml =
	 	<serverzlibstorage>
			<filestorage ${:number}>
				path ${:data_dir}/${:name}.fs
				blob-dir ${:blob_dir}
				pack-gc false
			</filestorage>
		</serverzlibstorage>

[base_client] # client and storage have to be separate to avoid a dep loop
client_zcml =
		<zodb ${:name}>
			pool-size 2
			database-name ${:name}
			cache-size 75000
			<zlibstorage>
				<zeoclient>
					server ${zeo:clientPipe}
					shared-blob-dir True
					blob-dir ${:blob_dir}
					storage 1
					name ${:name}
				</zeoclient>
			</zlibstorage>
		</zodb>

# To add a new database, define
# a storage and client section and fill in the details.
# Ref the storage section from the paths in zeo_dirs
# and the appropriate ZCML in the zeo and zodb_conf sections
[user_storage]
<= base_storage
name = Users
number = 1

[user_client]
<= user_storage
   base_client

[zeo]
name = Dataserver
recipe = zc.zodbrecipes:server
clientPipe = ${buildout:directory}/var/zeosocket
logFile = ${buildout:directory}/var/log/zeo.log
zeo.conf =
		%import zc.zlibstorage
		<zeo>
			address ${:clientPipe}
		</zeo>

		${user_storage:server_zcml}

		<eventlog>
			<logfile>
				path ${:logFile}
				format %%(asctime)s %%(message)s
				level DEBUG
			</logfile>
		</eventlog>
deployment = deployment

[supervisor]
programs +=
		 1 zeo ${deployment:etc-directory}/bin/zeo [${deployment:etc-directory}/${zeo:name}-zeo.conf]

[zodb_conf]
recipe = collective.recipe.template
output = ${deployment:etc-directory}/zodb_conf.xml
input = inline:
		%import zc.zlibstorage

		${user_client:client_zcml}

[trick-conf]
recipe = z3c.recipe.filetemplate
source-directory = templates
files = MARKER
interpreted-options = lower_names = buildout['user_client']['name'].lower()

[zodb_uri_conf]
recipe = collective.recipe.template
output = ${deployment:etc-directory}/zeo_uris.ini
input = inline:
	  [ZODB]
	  uris = zconfig://${zodb_conf:output}#${trick-conf:lower_names}

# TODO: How to avoid repetition here? The filetemplate allows
# lower-casing through its pipes and filters, but we don't have that
# option here unless we pull in genshi (?). The name needs to be
# lowercased here for complicated reasons (see nti.dataserver.config).
# The trick of not really using a file but getting filetemplate to interpret
# the option works but isn't pretty
