[buildout]
extends =
		deployment.cfg
		pcre.cfg
		openssl.cfg

parts =
	  directories
	  zlib
	  pcre
	  openssl
	  nginx

[nginx]
recipe = hexagonit.recipe.cmmi
url = http://nginx.org/download/nginx-1.15.5.tar.gz
keep-compile-dir = false
extra-configure-options =
# sadly clang and gcc take different values for rpath, one
# requires =, one forbids it
configure-cc-opt="-I${openssl:location}/include -I${pcre:location}/include -I${zlib:location}/include"
configure-ld-opt="-L${openssl:location}/lib -Wl,-rpath ${openssl:location}/lib -L${pcre:location}/lib -Wl,-rpath ${pcre:location}/lib -L${zlib:location}/lib -Wl,-rpath ${zlib:location}/lib"
configure-options =
				  --sbin-path=${deployment:bin-directory}/nginx
				  --conf-path=${deployment:etc-directory}/nginx/nginx.conf
				  --pid-path=${deployment:run-directory}
				  --lock-path=${deployment:run-directory}
				  --http-log-path=${deployment:log-directory}/nginx/access.log
				  --with-http_v2_module
				  --with-http_gunzip_module
				  --with-http_gzip_static_module
				  --with-http_auth_request_module
				  --with-http_realip_module
				  --with-pcre
				  --with-http_ssl_module
				  --with-ld-opt=${:configure-ld-opt}
				  --with-cc-opt=${:configure-cc-opt}
				  ${:extra-configure-options}

[nginx:linux]
extra-configure-options =
						--with-file-aio

configure-ld-opt="-L${openssl:location}/lib -Wl,-rpath=${openssl:location}/lib -L${pcre:location}/lib -Wl,-rpath=${pcre:location}/lib -L${zlib:location}/lib -Wl,-rpath=${zlib:location}/lib"

[nginx-supervisord]
nginx_exec = /usr/sbin/nginx
nginx = 99 nginx ${:nginx_exec} [-c ${deployment:etc-directory}/nginx/nginx.conf]

[nginx-conf]
recipe = z3c.recipe.filetemplate
source-directory = templates
dest-directory = ${deployment:root-directory}
# the main conf file is already installed
# as part of building nginx, we must overwrite it
force-overwrite = true
files = nginx.conf fastcgi.conf fastcgi_params koi-utf koi-win mime.types scgi_params uwsgi_params win-utf dataserver.conf

# Whether nginx should daemonize. Set it to
# off if you will be controlling it with
# supervisor, on if system will control it
nginx_daemon = off
aio = aio on;
# The location of the config file
# on disk for the webapp.
webapp_config_file = ${deployment:root-directory}/etc/webapp/config.js

# Logging knobs
nginx_access_log = /dev/stdout
nginx_access_log_options = main buffer=4k flush=1m
nginx_error_log = /dev/stderr
nginx_error_log_level = warn

# PID file
nginx_pidfile = ${deployment:run-directory}/nginx.pid

# Temp caches
client_body_temp_path = ${deployment:cache-directory}/nginx/client_temp
fastcgi_temp_path = ${deployment:cache-directory}/nginx/fastcgi_temp
proxy_temp_path = ${deployment:cache-directory}/nginx/proxy_temp
scgi_temp_path = ${deployment:cache-directory}/nginx/scgi_temp
uwsgi_temp_path = ${deployment:cache-directory}/nginx/uwsgi_temp

# Server name cache knobs
server_names_hash_bucket_size = 128
server_names_hash_max_size = 512

# The default landing site name. Set this in environments
# that only hae one landing site so that deep links
# work even without the site cookie.
default_landing_site_name = $host

# Copy these things in from the environment; eventually
# they should move directly here; the extends keyword is a
# bad idea if there are many unrelated settings
webapp_path = ${environment:webapp_path}
webapp_location = ${environment:webapp_location}
loginapp_path = ${environment:loginapp_path}
loginapp_location = ${environment:loginapp_location}
mobileweb_path = ${environment:mobileweb_path}
nginx_http_port = ${environment:nginx_http_port}
dataserver_http_port = ${environment-dataserver:http_port}
nodejs_http_port = ${environment:nodejs_http_port}
global_host_name = ${environment:global_host_name}
global_content_directory = ${environment:global_content_directory}
global_content_location = ${environment:global_content_location}
hosted_badge_images_directory = ${environment:hosted_badge_images_directory}
hosted_badge_images_location = ${environment:hosted_badge_images_location}
nginx_user = ${environment:nginx_user}
nginx_workers = ${environment:nginx_workers}
vendor_lib_path = ${buildout:root-directory}/node_modules/nti-lib-vendor/vendor
environment_support_path = ${buildout:root-directory}/node_modules/@nti/environment-support
sitepackage_location = ${buildout:root-directory}/node_modules/@nti/client-sites-default
default_site_assets = ${buildout:root-directory}/node_modules/@nti/client-sites-default
server_site_assets = ${environment:global_site_assets_directory}
sites_basedir = ${deployment:run-directory}/www
robots_file = robots-dev.txt

nginx_ip = 127.0.0.1
nginx_dataserver_port = 127.0.0.1:${environment-dataserver:http_port}
nginx_proxy_port = ${environment:nginx_proxy_port}
nginx_extra_binds =
        listen ${:nginx_http_port};

# How many files to keep in the open cache. This should be
# at least 60K in production (smaller in dev where ulimits
# are usually not set up)
nginx_max_open_files = 60000

# Block to allow addition nginx configuration is special scenarios
nginx_extra_server_config =

[nginx-conf:macosx]
# AIO is not even a directive on osx
aio =
