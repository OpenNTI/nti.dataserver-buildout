# A buildout for setting up and running
# integration test suite.
[buildout]
extends =
		webapps.cfg
		sphinxdoc.cfg
		zeo_environment.cfg
		hypatia.cfg
		analytics.cfg
		ims.cfg

relative-paths = false

parts -=
	  omelette
	  redis
	  python_ldap
	  openssl
	  haproxy
	  stunnel-cert
	  nginx
	  nginx-conf
	  stunnel
	  memcached
	  imagemagick
	  libjpeg
	  libpng
	  pillow
	  pycrypto
	  libgmp
parts +=
	  phantomjs
	  z3c_sphinxdoc
# Somewhat often we hit the threading bug that
# locks the system up during integration testing,
# preventing it from running. Also, all the simultaneous
# checkouts sometimes make our SVN server complain...
# UPDATE: Hold off on that, we just seem to have a really
# terrible Internet connection while testing this
# mr.developer-threads = 1

[environment]
# Because of the order of inclusion, we need this here
webapp_path = ${buildout:sources-dir}/nti.web.app
loginapp_path = ${buildout:sources-dir}/NextThoughtLoginApp

[site-sources]
<= site-ALL-sources

[product-sources]
<= product-ALL-sources

[extra-sources]
# Temporary, will be moved up as we stabilize
nti.nose_traceback_info = git https://github.com/NextThought/nti.nose_traceback_info.git
nti.testing = svn https://repos.nextthought.com/svn/nti-svn/nti.testing/trunk
nti.app.testing = svn https://repos.nextthought.com/svn/nti-svn/nti.app.testing/trunk
z3c.recipe.sphinxdoc = git https://github.com/NextThought/z3c.recipe.sphinxdoc.git
nti.integrationtests = svn https://repos.nextthought.com/svn/nti-svn/nti.integrationtests/trunk

[eggs]
dataserver_egg = nti.dataserver[tools,test]
eggs +=
	 tox
	 ${site-ALL-eggs:eggs}
	 ${product-ALL-eggs:eggs}
	 nti.recipes.zcml
	 nti.integrationtests
	 z3c.recipe.sphinxdoc
	 nose2
	 nose2-cov
	 zope.testrunner
initialization +=
			   os.environ['PATH'] = "${deployment:root-directory}/parts/phantomjs/bin" + os.pathsep + os.environ['PATH']

# We would like to pick up some of the things
# from contentrendering.cfg, notably phantomjs;
# but if we try, we also recompile imagemagick every
# time, which is far too slow. I didn't find a way to factor
# out initialization and part code such that it could
# be made to happen; therefore, we have our own copy.
# The test machine must supply its own install of
# imagemagick and latex.

[phantomjs]
recipe = hexagonit.recipe.download
url = https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-1.9.7-macosx.zip
strip-top-level-dir = true
excludes =
		 examples
		 README.md
		 third-party.txt

[deployment]
root-directory = ${buildout:root-directory}

[environment]
global_content_directory = /Library/WebServer/Documents

[pserve-conf]
http-port = 62543
use_devmode = 1
secure_cookies = 0

[gunicorn-conf]
# Use a controlled number of workers rather than
# auto-calc for ease of debugging and reproduction.
# But use more than one to test concurrency
workers = 2

[init_env]
args = --with-example

[redis-conf]
redis-path = /opt/local/bin/redis-server

[zcml]
package_features +=
				 devmode
				 testmode

[supervisor]
# Turn off email of crashes
eventlisteners =

