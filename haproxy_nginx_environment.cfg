[buildout]
extends =
		haproxy.cfg
		nginx.cfg
       	base_environment.cfg
parts +=
      zlib
	  openssl
	  haproxy
	  nginx
	  ssl-cert

[ssl-ca]
recipe = collective.recipe.cmd
on_install = true
on_update = true
openssl_conf = ${deployment:root-directory}/dev_env.cnf
ca_dir = $HOME/DevCA
cmds =
    if [ ! -e ${:ca_dir}/cacert.pem ]; then
        echo "----------------------------------"
        echo "Creating local CA with a 4096-bit key and 10 year cert in $CA_DIR"
        mkdir -p ${:ca_dir}/{certsdb,certreqs,crl,private}
        chmod 700 ${:ca_dir}/private/"
        touch ${:ca_dir}/index.txt"
        openssl req -config ${:openssl_conf} -batch -nodes -new -newkey rsa:4096 -keyout ${:ca_dir}/private/cakey.pem -out ${:ca_dir}/careq.pem -subj "/C=US/ST=Oklahoma/L=Norman/O=NextThought/OU=DevOps/CN=localhost CA"
        openssl ca -config ${:openssl_conf} -batch -notext -create_serial -selfsign -extensions v3_ca_has_san -days 3750 -out ${:ca_dir}/cacert.pem -keyfile ${:ca_dir}/private/cakey.pem -infiles ${:ca_dir}/careq.pem
        if [ -e /usr/bin/security ]; then
            echo "Adding new CA cert to the macOS root trust store"
            sudo security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain ${:ca_dir}/cacert.pem
        fi 
        echo "----------------------------------"
    else
        echo "----------------------------------"
        echo "Local CA already exists at ${:ca_dir}. Skipping CA creation."
        echo "----------------------------------"
    fi

[ssl-cert]
recipe = collective.recipe.cmd
on_install = true
on_update = true
pki_dir = ${deployment:etc-directory}/pki
openssl_conf = ${deployment:root-directory}/dev_env.cnf
cmds =
    mkdir -p ${:pki_dir}
    if [ -e ${:pki_dir}/localhost.crt ]; then
        echo "----------------------------------"
        echo "Revoking existing certificate"
        openssl ca -config ${:openssl_conf} -crl_reason superseded -revoke ${:pki_dir}/localhost.crt
        echo "----------------------------------"
    fi
    echo "----------------------------------"
    echo "Creating 2048-bit SSL key and 1 year cert"
    openssl req -config ${:openssl_conf} -batch -nodes -new -newkey rsa:2048 -keyout ${:pki_dir}/localhost.key -out ${:pki_dir}/localhost.csr
    openssl ca -config ${:openssl_conf} -batch -in ${:pki_dir}/localhost.csr -out ${:pki_dir}/localhost.crt -extensions v3_req
    cat ${:pki_dir}/localhost.key ${:pki_dir}/localhost.crt "${ssl-ca:ca_dir}/cacert.pem" > ${:pki_dir}/localhost.pem
    echo "----------------------------------"

[environment-haproxy]
ssl_cert = ${ssl-cert:pki_dir}/localhost.pem
