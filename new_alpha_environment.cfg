[buildout]
extends =
		webapps.cfg
		haproxy_nginx_environment.cfg
		relstorage_environment.cfg
always-checkout = true
# Sharing the eggs and caches
#eggs-directory=/opt/ntiusers/buildout-eggs
#download-cache=/opt/ntiusers/buildout-cache
# NOTE: The above is disabled due to permission problems
# with multiple users and eggs that use dynamic libraries
# (notably our build of lxml)

# NOTE: When extending multiple base configs,
# only the parts from the bottom config are
# installed by default (even if they all use 'parts +=').
# So if we want to install parts from both configs,
# we need to explicitly list them.
parts +=
	  haproxy
	  nginx
	  nginx-conf
	  haproxy-conf
	  qp-cron
	  senchacmd
	  compass
	  app-minify
	  ext42
	  ext42-link


[site-sources]
<= site-ALL-sources

[product-sources]
<= product-ALL-sources

[site-zcml]
package_zcml =
			 ${site-ALL-eggs:eggs}

[product-zcml]
package_zcml =
			 ${product-ALL-eggs:eggs}
package_zcml -= nti.contenttypes.courses

[zcml]
# Temporarily let non-ou-enrolled students have all assignments
package_features += assignments_for_everyone

[eggs]
eggs +=
	 ${site-ALL-eggs:eggs}
	 ${product-ALL-eggs:eggs}

[webapp-versions]
NextThoughtWebApp = rev=30752
NextThoughtLoginApp = rev=30752

[passwords]
file = new_alpha_passwords.pass.cast5

[relstorages]
storages = Users Users_1 Sessions
shared-blob-dir = true

[relstorages_opts]
sql_adapter_extra_args =
					   port 20024

[relstorages_users_storage_opts]
sql_host = 10.50.2.50
sql_passwd = ${passwords:sql_users_passwd}

[relstorages_users_1_storage_opts]
sql_host = 10.50.2.50
sql_passwd = ${passwords:sql_users_1_passwd}

[relstorages_sessions_storage_opts]
sql_host = 10.50.2.50
sql_passwd = ${passwords:sql_sessions_passwd}

[environment]
sql_user = ntiuser
cache_servers = 10.50.0.50:20025
smtp_server = email-smtp.us-east-1.amazonaws.com
smtp_username = AKIAIOO43PY4ANWEYP2Q
smtp_port = 587
global_host_name = alpha.nextthought.com
global_content_directory = ${buildout:directory}/../DataserverGlobalLibrary
global_content_location = /content/
webapp_location = /
loginapp_location = /login/

nginx_http_port = 20020
dataserver_http_port = 20021
haproxy_http_port = 20026
# SAJ: listen to all interfaces to allow load balancers to submit
# decrypted SSL traffic for processing
haproxy_http_addr = 0.0.0.0
haproxy_redirect_to_ssl_port = 20027
stunnel_socket_owner = ntiuser-alpha
haproxy_stunnel_socket_user = user ${:stunnel_socket_owner}

# Because of the order of inclusion, we need this here
webapp_path = ${buildout:sources-dir}/NextThoughtWebApp
loginapp_path = ${buildout:sources-dir}/NextThoughtLoginApp


[nginx-conf]
nginx_daemon = off

[haproxy-conf]
haproxy_addl_ssl_acls = acl is_ssl so_id ${environment:haproxy_http_port}
# We have a frontend sending us proxy protocol
haproxy_http_accept_proxy = accept-proxy

[redis-conf]
port = 20023
redis_client_url = redis://10.50.0.50:${:port}
# Use production-level database
# persistence timing
save-settings =
			  save 900 1
			  save 300 10
			  save 60 10000

[pserve-conf]
email_error_subject_prefix = Alpha Error:
email_error_from = automated.emails@nextthought.com
email_error_to = alpha-support@nextthought.com

purchase_additional_confirmation_addresses = greg.higgins@nextthought.com kaley.white@nextthought.com

[gunicorn-conf]
preload_app = true

## Testing prod values
##
# Limit requests before restart
max_requests = 3500
# Limit concurrent connections to a worker
worker_connections = 350

[memcached-conf]
memcached-port = 20025
extra-opts = -m 4096 -c 4096

[library-conf]
library-type = filesystemLibrary
library-args =
			 directory="${environment:global_content_directory}"
			 prefix="${environment:global_content_location}"

[webapp-conf]
allow_mobile_safari = true
unauth_location = /landing/site.html
features =
 		 "mutable-forums":true,
         "fancy-scroll":true,
         "notepad":false,
         "v3matching":false,
	 "threaded-forums":true,
	 "transcript-follow-video": true,
         "video-settings":true

#Open external PDF Content Card links in a new tab
external_pdf_new_window = true

[supervisor]
programs +=
         1 nginx ${deployment:bin-directory}/nginx
         1 haproxy ${deployment:bin-directory}/haproxy [-f ${deployment:etc-directory}/haproxy/haproxy.cfg -db]
         ${memcached-conf:memcached-supervisor}
