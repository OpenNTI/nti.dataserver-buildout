[buildout]
extends =
		logrotate.cfg
		webapps.cfg
		haproxy_nginx_environment.cfg
		hypatia.cfg
		badges.cfg
		relstorage_environment.cfg
		analytics.cfg
		sites.cfg
		ims.cfg

always-checkout = true
# Sharing the eggs and caches
# eggs-directory=/opt/ntiusers/buildout-eggs
# download-cache=/opt/ntiusers/buildout-cache
# NOTE: The above is disabled due to permission problems
# with multiple users and eggs that use dynamic libraries
# (notably our build of lxml)

# NOTE: When extending multiple base configs,
# only the parts from the bottom config are
# installed by default (even if they all use 'parts +=').
# So if we want to install parts from both configs,
# we need to explicitly list them.
parts +=
		logrotate
		logrotate-conf
		logrotate-cron
		nginx
		nginx-conf
		qp-cron
		senchacmd
		compass
		grunt
		bower
		nodeserver-env
		nodeserver
		app-minify
		deploy-mobile-app
		ext42
		ext42-link
		tahrir-conf
		analytics-conf
		feed-utility-conf

[site-sources]
<= site-ALL-sources

[product-sources]
<= product-ALL-sources

[zcml]
# Temporarily let non-ou-enrolled students have all assignments
package_features += assignments_for_everyone
    				alpha_env
					no_avatar
#					disable_forum_comments_in_activity

[eggs]
eggs +=
		${site-ALL-eggs:eggs}
		${badges-ALL-eggs:eggs}
		${product-ALL-eggs:eggs}
		${analytics-ALL-eggs:eggs}

[webapp-versions]
NextThoughtWebApp = branch=develop
NextThoughtLoginApp = @70933
MobileApp = branch=develop

[server-versions]
All = @71214

[nodeserver-env]
app-version = ${webapp-versions:MobileApp}
node-ip = 0.0.0.0
dataserver-ip = 10.50.0.50
dataserver-port = ${environment:haproxy_http_port}

[passwords]
file = new_alpha_passwords.pass.cast5

[roles]
# Permission some accounts with special capabilities
files += 667-alpha-rolemap.zcml

[relstorages]
storages = Users Users_1 Sessions
shared-blob-dir = true
cache-local-mb = 200
cache-size = 10000

[relstorages_opts]
sql_adapter_extra_args =
						port 20024

[relstorages_users_storage_opts]
sql_host = 10.50.2.50
sql_passwd = ${passwords:sql_users_passwd}

[relstorages_users_1_storage_opts]
sql_host = 10.50.2.50
sql_passwd = ${passwords:sql_users_1_passwd}

[relstorages_sessions_storage_opts]
sql_host = 10.50.2.50
sql_passwd = ${passwords:sql_sessions_passwd}

[environment]
sql_user = ntiuser
cache_servers = 10.50.0.50:20025
smtp_server = email-smtp.us-east-1.amazonaws.com
smtp_username = AKIAIOO43PY4ANWEYP2Q
smtp_port = 587
global_host_name = alpha.nextthought.com
global_content_directory = ${buildout:directory}/../DataserverGlobalLibrary
global_content_location = /content/

nginx_proxy_port = 20022
dataserver_http_port = 20021
nodejs_http_port = 20028
haproxy_http_port = 20020
# SAJ: listen to all interfaces to allow load balancers to submit
# decrypted SSL traffic for processing
haproxy_http_addr = 0.0.0.0

# Because of the order of inclusion, we need this here
webapp_path = ${buildout:sources-dir}/nti.web.app
loginapp_path = ${buildout:sources-dir}/NextThoughtLoginApp
mobileweb_path = ${buildout:sources-dir}/nti.web.mobile

[environment-haproxy]
proxy_port = 20026

[nginx-conf]
nginx_daemon = off
nginx_ip = 0.0.0.0
nginx_extra_binds =

[main-conf]
redis_client_url = redis://10.50.0.50:${redis-conf:port}

[redis-conf]
port = 20023
# Use production-level database
# persistence timing
save-settings =
			save 900 1
			save 300 10
			save 60 10000

[pserve-conf]
email_error_subject_prefix = Alpha Error:
concurrent_enrollment_addresses = nti-testing@nextthought.com
purchase_additional_confirmation_addresses = alpha-support@nextthought.com

[gunicorn-conf]
preload_app = true

# Testing prod values
#
# Limit requests before restart
# max_requests = 3500
# Distribute load better across instances
worker_connections = 250
workers = 18

[memcached-conf]
memcached-port = 20025
extra-opts = -m 1024 -c 4096

[tahrir]
dbname = Tahrir
user = ntitahrir
twophase = True
autocommit = False
driver = mysql+pymysql
host = 10.50.2.50:20024
password = ${passwords:sql_users_passwd}

[tahrir-conf]
recipe = z3c.recipe.filetemplate
source-directory = templates
dest-directory = ${deployment:root-directory}
files = 888-nti.app.tahrir.zcml

[analytics]
dbname = Analytics
user = ntianalytics
twophase = True
autocommit = False
driver = mysql+pymysql
host = 10.50.2.50:20024
password = ${passwords:sql_users_passwd}

[analytics-conf]
recipe = z3c.recipe.filetemplate
source-directory = templates
dest-directory = ${deployment:root-directory}
files = 777-nti.app.analytics.zcml

[library-conf]
library-type = filesystemLibrary
library-args =
			directory="${environment:global_content_directory}"
			prefix="${environment:global_content_location}"

[webapp-conf]
allow_mobile_safari = true
unauth_location = /landing/site.html
features =
		"mutable-forums":true,
		"fancy-scroll":true,
		"notepad":false,
		"v3matching":true,
		"threaded-forums":true,
		"transcript-follow-video": true,
		"bulk-resolve-users": true,
		"kaltura.progressive": true,
		"video-settings":true,
		"analytic-reports":true,
		"show-open-students-first":false,
		"notifications": true,
		"badges":true,
		"capture-analytics":true,
		"hide-add-books":true,
		"gradebook-state":true,
		"default-avatar-to-initials":true,
		"section-switcher":true

# Point alpha webapp to the test player
kalturaUIID = 22104902

# Open external PDF Content Card links in a new tab
external_pdf_new_window = true

[feed-utility-conf]
recipe = z3c.recipe.filetemplate
source-directory = templates
dest-directory = ${deployment:root-directory}
files = fetch_feed

[fetch-okstate-feed]
recipe = z3c.recipe.usercrontab
times = 30 3,9,15,21 * * *
command = ${deployment:bin-directory}/fetch_feed okstate-001 ${deployment:run-directory}/feed/okstate

[fetch-ou-feed]
recipe = z3c.recipe.usercrontab
times = 30 3,9,15,21 * * *
command = ${deployment:bin-directory}/fetch_feed ou-002 ${deployment:run-directory}/feed/OU

[supervisor]
# Disable supervisord based log rotation because we have switched to using logrotate
logfile-maxbytes = 0
childstdout-logfile-maxbytes = 0
childstderr-logfile-maxbytes = 0
# Don't wipe away existing logs
nocleanup = True
pserve_group_programs = pserve,hypatia,analytics,metadata
programs +=
		1 nginx ${deployment:bin-directory}/nginx
		${memcached-conf:memcached-supervisor}
		1 node ${deployment:bin-directory}/node [${deployment:root-directory}/sources/nti.web.mobile/dist/server/ -l ${nodeserver-env:node-ip} -p ${nodeserver-env:http-port} --dataserver-host ${nodeserver-env:dataserver-ip} --dataserver-port ${nodeserver-env:dataserver-port} --protocol proxy]
		1 node0 ${deployment:bin-directory}/node [${deployment:root-directory}/sources/nti.web.mobile/dist/server/ -l ${nodeserver-env:node-ip} -p ${nodeserver-env:http-port} --dataserver-host ${nodeserver-env:dataserver-ip} --dataserver-port 21020 --protocol proxy]
		1 node1 ${deployment:bin-directory}/node [${deployment:root-directory}/sources/nti.web.mobile/dist/server/ -l ${nodeserver-env:node-ip} -p ${nodeserver-env:http-port} --dataserver-host ${nodeserver-env:dataserver-ip} --dataserver-port 21021 --protocol proxy]
		1 node2 ${deployment:bin-directory}/node [${deployment:root-directory}/sources/nti.web.mobile/dist/server/ -l ${nodeserver-env:node-ip} -p ${nodeserver-env:http-port} --dataserver-host ${nodeserver-env:dataserver-ip} --dataserver-port 21022 --protocol proxy]
		1 node3 ${deployment:bin-directory}/node [${deployment:root-directory}/sources/nti.web.mobile/dist/server/ -l ${nodeserver-env:node-ip} -p ${nodeserver-env:http-port} --dataserver-host ${nodeserver-env:dataserver-ip} --dataserver-port 21023 --protocol proxy]
		99 hypatia ${deployment:bin-directory}/nti_hypatia_indexer [-v -m ${hypatia-conf:mintime} -x ${hypatia-conf:maxtime} -l ${hypatia-conf:limit}]
		99 analytics ${deployment:bin-directory}/nti_analytics_processor [-v]

[boto]
aws_access_key_id = AKIAJVAIKRRDR5CL4OBQ
