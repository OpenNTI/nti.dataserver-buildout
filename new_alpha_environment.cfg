[buildout]
extends =
		logrotate.cfg
		webapps.cfg
		haproxy_nginx_environment.cfg
		hypatia.cfg
		badges.cfg
		relstorage_environment.cfg
always-checkout = true
# Sharing the eggs and caches
#eggs-directory=/opt/ntiusers/buildout-eggs
#download-cache=/opt/ntiusers/buildout-cache
# NOTE: The above is disabled due to permission problems
# with multiple users and eggs that use dynamic libraries
# (notably our build of lxml)

# NOTE: When extending multiple base configs,
# only the parts from the bottom config are
# installed by default (even if they all use 'parts +=').
# So if we want to install parts from both configs,
# we need to explicitly list them.
parts +=
	  logrotate
	  logrotate-conf
	  logrotate-cron
	  haproxy
	  nginx
	  nginx-conf
	  haproxy-conf
	  stunnel-cert
	  stunnel
	  qp-cron
	  senchacmd
	  compass
	  app-minify
	  ext42
	  ext42-link
	  tahrir-conf

[site-sources]
<= site-ALL-sources

[product-sources]
<= product-ALL-sources


[zcml]
# Temporarily let non-ou-enrolled students have all assignments
package_features += assignments_for_everyone
#		disable_forum_comments_in_activity

[eggs]
eggs +=
	 ${site-ALL-eggs:eggs}
	 ${product-ALL-eggs:eggs}
	 ${badges-ALL-eggs:eggs}

[webapp-versions]
NextThoughtWebApp = @44111
NextThoughtLoginApp = @43438

[server-versions]
All = @44215

[passwords]
file = new_alpha_passwords.pass.cast5

[relstorages]
storages = Users Users_1 Sessions
shared-blob-dir = true

[relstorages_opts]
sql_adapter_extra_args =
					   port 20024

[relstorages_users_storage_opts]
sql_host = 10.50.2.50
sql_passwd = ${passwords:sql_users_passwd}

[relstorages_users_1_storage_opts]
sql_host = 10.50.2.50
sql_passwd = ${passwords:sql_users_1_passwd}

[relstorages_sessions_storage_opts]
sql_host = 10.50.2.50
sql_passwd = ${passwords:sql_sessions_passwd}

[environment]
sql_user = ntiuser
cache_servers = 10.50.0.50:20025
smtp_server = email-smtp.us-east-1.amazonaws.com
smtp_username = AKIAIOO43PY4ANWEYP2Q
smtp_port = 587
global_host_name = alpha.nextthought.com
global_content_directory = ${buildout:directory}/../DataserverGlobalLibrary
global_content_location = /content/

nginx_http_port = 20020
nginx_proxy_port = 20022
dataserver_http_port = 20021
haproxy_http_port = 20026
# SAJ: listen to all interfaces to allow load balancers to submit
# decrypted SSL traffic for processing
haproxy_http_addr = 0.0.0.0
haproxy_redirect_to_ssl_port = 20027
stunnel_socket_owner = ntiuser-alpha
haproxy_stunnel_socket_user = user ${:stunnel_socket_owner}

# Because of the order of inclusion, we need this here
webapp_path = ${buildout:sources-dir}/NextThoughtWebApp
loginapp_path = ${buildout:sources-dir}/NextThoughtLoginApp

[nginx-conf]
nginx_daemon = off

[haproxy-conf]
haproxy_addl_ssl_acls = acl is_ssl so_id ${environment:haproxy_http_port}
# We have a frontend sending us proxy protocol
haproxy_http_accept_proxy = accept-proxy

[redis-conf]
port = 20023
redis_client_url = redis://10.50.0.50:${:port}
# Use production-level database
# persistence timing
save-settings =
			  save 900 1
			  save 300 10
			  save 60 10000

[pserve-conf]
email_error_subject_prefix = Alpha Error:
purchase_additional_confirmation_addresses = alpha-support@nextthought.com greg.higgins@nextthought.com kaley.white@nextthought.com

[gunicorn-conf]
preload_app = true

## Testing prod values
##
# Limit requests before restart
#max_requests = 3500
# Distribute load better across instances
worker_connections = 250

[memcached-conf]
memcached-port = 20025
extra-opts = -m 4096 -c 4096

[tahrir]
dbname = Tahrir
user = ntitahrir
twophase = True
autocommit = False
driver = mysql+pymysql
host = 10.50.2.50:20024
password = ${passwords:sql_users_passwd}

[tahrir-conf]
recipe = z3c.recipe.filetemplate
source-directory = templates
dest-directory = ${deployment:root-directory}
files = 888-nti.app.tahrir.zcml

[library-conf]
library-type = filesystemLibrary
library-args =
			 directory="${environment:global_content_directory}"
			 prefix="${environment:global_content_location}"

[webapp-conf]
allow_mobile_safari = true
unauth_location = /landing/site.html
features =
		 "mutable-forums":true,
		 "fancy-scroll":true,
		 "notepad":false,
		 "v3matching":false,
		 "threaded-forums":true,
		 "transcript-follow-video": true,
		 "bulk-resolve-users": true,
		 "kaltura.progressive": true,
		 "video-settings":true,
		 "analytic-reports":true,
		 "show-open-students-first":true,
		 "notifications": true,
		 "badges":true

#point alpha webapp to the test player
kalturaUIID = 22104902

#Open external PDF Content Card links in a new tab
external_pdf_new_window = true

[supervisor]
# Disable supervisord based log rotation because we have switched to using logrotate
logfile-maxbytes = 0
childstdout-logfile-maxbytes = 0
childstderr-logfile-maxbytes = 0
# Don't wipe away existing logs
nocleanup = True
pserve_group_programs = pserve,hypatia
programs +=
         1 nginx ${deployment:bin-directory}/nginx
         1 haproxy ${deployment:bin-directory}/haproxy [-f ${deployment:etc-directory}/haproxy/haproxy.cfg -db]
         ${memcached-conf:memcached-supervisor}
         99 hypatia ${deployment:bin-directory}/nti_hypatia_indexer [-v -m ${hypatia-conf:mintime} -x ${hypatia-conf:maxtime} -l ${hypatia-conf:limit}]

[boto]
aws_access_key_id = AKIAJVAIKRRDR5CL4OBQ
