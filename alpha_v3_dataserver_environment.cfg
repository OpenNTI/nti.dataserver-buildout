[buildout]
extends =
		logrotate.cfg
		haproxy_nginx_environment.cfg
		relstorage_environment.cfg
		badges.cfg
		analytics.cfg
		sites.cfg
		ims.cfg
		solr.cfg

always-checkout = true
# NOTE: When extending multiple base configs,
# only the parts from the bottom config are
# installed by default (even if they all use 'parts +=').
# So if we want to install parts from both configs,
# we need to explicitly list them.
parts =
		logrotate
		logrotate-conf
		logrotate-cron
		libgmp
		pycrypto
		libyaml
		pyyaml
		cython
		lxml
		pillow
		eggs
		checkversions
		passwords
		directories
		zcml
		main-conf
		pserve-conf
		gunicorn-conf
		library-conf
		clean-pyc
		roles
		mysql
		MySQL-python
		supervisor
		relstorages
		qp-cron
		tahrir-conf
		analytics-conf
		analytics-conf
		analytics-changemaker-conf
		analytics-columbia-conf
		analytics-greatexpectations-conf
		analytics-i2-conf
		analytics-iled-conf
		analytics-k20-conf
		analytics-litworld-conf
		analytics-movingup-conf
		analytics-ona-conf
		analytics-osde-conf
		analytics-prmia-conf
		analytics-spurstartup-conf
		feed-utility-conf
		solr-conf
		
[site-sources]
<= site-ALL-sources

[product-sources]
<= product-ALL-sources

[solr-sources]
<= solr-ALL-sources

[zcml]
package_features += alpha_env
					no_avatar
#					disable_forum_comments_in_activity

[eggs]
eggs +=
		${site-ALL-eggs:eggs}
		${badges-ALL-eggs:eggs}
		${product-ALL-eggs:eggs}
		${analytics-ALL-eggs:eggs}
		${solr-ALL-eggs:eggs}

[versions]
ZEO = 5.0.4
ZODB = 5.1.1
transaction = 2.0.3

[server-versions]
All = @105104
sites = @105104

[solr-conf]
files = 785-alpha-solr.zcml

[passwords]
file = alpha_v3_passwords.pass.cast5

[roles]
# Permission some accounts with special capabilities
files += 667-alpha-rolemap.zcml

[relstorages]
shared-blob-dir = false
storages = Users Users_1 Users_2
cache-local-mb = 300

[relstorages_opts]
sql_adapter_extra_args =
						port 3306
						driver umysqldb

[relstorages_users_storage_opts]
sql_host = db1.alpha
sql_passwd = ${passwords:sql_users_passwd}

[relstorages_users_1_storage_opts]
sql_host = db1.alpha
sql_passwd = ${passwords:sql_users_1_passwd}

[relstorages_users_2_storage_opts]
sql_host = db1.alpha
sql_passwd = ${passwords:sql_users_2_passwd}

[environment]
sql_user = ntiuser
sql_host = db1.alpha
cache_servers = memcached.alpha:11211
smtp_server = email-smtp.us-east-1.amazonaws.com
smtp_username = AKIAIOO43PY4ANWEYP2Q
smtp_port = 587
global_host_name = alpha.nextthought.com
global_content_directory = ${buildout:directory}/../DataserverGlobalLibrary
global_content_location = /content/

# Because of the order of inclusion, we need this here
webapp_path = ${buildout:sources-dir}/nti.web.app
loginapp_path = ${buildout:sources-dir}/NextThoughtLoginApp

[main-conf]
redis_client_url = redis://redis.alpha:6379

[pserve-conf]
email_error_subject_prefix = Alpha Error:
concurrent_enrollment_addresses = nti-testing@nextthought.com
i2_enrollment_addresses = nti-testing@nextthought.com josh.zuech@nextthought.com
purchase_additional_confirmation_addresses = alpha-support@nextthought.com

[gunicorn-conf]
preload_app = true
# Distribute load better across instances
worker_connections = 250
workers = 4

[tahrir]
dbname = Tahrir
user = ntitahrir
twophase = True
autocommit = False
driver = mysql+pymysql
host = db1.alpha:3306
password = ${passwords:sql_users_passwd}

[tahrir-conf]
recipe = z3c.recipe.filetemplate
source-directory = templates
dest-directory = ${deployment:root-directory}
files = 888-nti.app.tahrir.zcml

[analytics]
dbname = Analytics
user = ntianalytics
twophase = True
autocommit = False
driver = mysql+pymysql
host = db1.alpha:3306
password = ${passwords:sql_users_passwd}

[analytics-conf]
recipe = z3c.recipe.filetemplate
source-directory = templates
dest-directory = ${deployment:root-directory}
files = 777-nti.app.analytics.zcml

[analytics-oc]
dbname = Analytics_OC
user = ntianalytics
twophase = True
autocommit = False
driver = mysql+pymysql
host = db1.alpha:3306
password = ${passwords:sql_users_passwd}

[oc-analytics-conf]
recipe = z3c.recipe.filetemplate
source-directory = templates
dest-directory = ${deployment:root-directory}
files = 779-nti.app.sites.oc.zcml

[analytics-changemaker-conf]
host = db1.alpha:3306

[analytics-columbia-conf]
host = db1.alpha:3306

[analytics-k20-conf]
host = db1.alpha:3306

[analytics-prmia-conf]
host = db1.alpha:3306

[analytics-spurstartup-conf]
host = db1.alpha:3306

[analytics-greatexpectations-conf]
host = db1.alpha:3306

[analytics-i2-conf]
host = db1.alpha:3306

[analytics-iled-conf]
host = db1.alpha:3306

[analytics-litworld-conf]
host = db1.alpha:3306

[analytics-movingup-conf]
host = db1.alpha:3306

[analytics-ona-conf]
host = db1.alpha:3306

[analytics-osde-conf]
host = db1.alpha:3306

[library-conf]
library-type = filesystemLibrary
library-args =
			 directory="${environment:global_content_directory}"
			 prefix="${environment:global_content_location}"

[feed-utility-conf]
recipe = z3c.recipe.filetemplate
source-directory = templates
dest-directory = ${deployment:root-directory}
files = fetch_feed

[fetch-okstate-feed]
recipe = z3c.recipe.usercrontab
times = 30 3,9,15,21 * * *
command = ${deployment:bin-directory}/fetch_feed okstate-001 ${deployment:run-directory}/feed/okstate

[fetch-ou-feed]
recipe = z3c.recipe.usercrontab
times = 30 3,9,15,21 * * *
command = ${deployment:bin-directory}/fetch_feed ou-002 ${deployment:run-directory}/feed/OU

[supervisor]
# Disable supervisord based log rotation because we have switched to using logrotate
logfile-maxbytes = 0
childstdout-logfile-maxbytes = 0
childstderr-logfile-maxbytes = 0
# Don't wipe away existing logs
nocleanup = True
pserve_group_programs = pserve,analytics,metadata,solr_indexer
programs =
        999 pserve ${deployment:root-directory}/bin/nti_pserve [${:pserve-ini}]
        99 solr_indexer (autostart=false) ${deployment:bin-directory}/nti_solr_indexer [-v]
        99 analytics (autostart=false) ${deployment:bin-directory}/nti_analytics_processor [-v]
        99 metadata (autostart=false) ${deployment:bin-directory}/nti_metadata_processor [-v -m 5 -x 10 --slugs]

[boto]
aws_access_key_id = AKIAJVAIKRRDR5CL4OBQ
aws_secret_access_key = ${passwords:aws_secret_access_key}

