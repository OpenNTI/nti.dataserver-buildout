[buildout]
# This buildout part is for creating documentation.

[z3c_sphinxdoc]
# provides a script that builds
# all the documentation for all the
# projects listed in `eggs`.
# An alternative might be dataflake.docbuilder.
# Note that we are using a customized version so we can
# set more options.
recipe = z3c.recipe.sphinxdoc
eggs = ${eggs:eggs}
	 z3c.recipe.sphinxdoc
doc-eggs =
		 nti.dataserver
		 nti.app.products.courseware
		 nti.app.assessment
		 nti.app.products.gradebook
extensions = sphinx.ext.autodoc
		   	 sphinx.ext.todo
			 sphinx.ext.viewcode
			 sphinx.ext.intersphinx
			 repoze.sphinx.autointerface
			 sphinxcontrib.programoutput
default.css =
layout.html =
src-dir = ../docs
extra-conf =
		   # JAM: repoze.sphinx.autointerface 0.7.1 does not handle cross-refs correctly.
		   # A pull request is submitted (https://github.com/repoze/repoze.sphinx.autointerface/pull/3) with a
		   # cleaner solution. Until then, this should do the trick.
		   from sphinx.domains import ObjType
		   from sphinx.domains.python import PythonDomain

		   # Allow the :class: directive to xref interface objects through the search
		   # mechanism, i.e., prefixed with a '.', like :class:`.ITheInterface`
		   # (without this, an exact match is required)
		   PythonDomain.object_types['interface'] = ObjType( 'interface', 'interface', 'obj', 'class')
		   PythonDomain.object_types['class'].roles += ('interface',)

		   # epydoc is better at inherited members than sphinx, so leave that out of the defaults
		   autodoc_default_flags = ['members', 'show-inheritance',] # 'undoc-members', 'special-members']
		   autoclass_content = 'both'
		   intersphinx_mapping = {
		   'python':  ('http://docs.python.org/2.7/', None),
		   'boto': ('http://boto.readthedocs.org/en/latest/', None),
		   'gunicorn': ('http://docs.gunicorn.org/en/latest/', None),
		   'paste': ('http://pythonpaste.org/', None),
		   #	'zodb':    ('http://zodb.readthedocs.org/en/latest/', None),
		   #	'pyramid': ('http://docs.pylonsproject.org/projects/pyramid/en/latest/', None),
		   'pyquery': ('http://packages.python.org/pyquery/', None) }
		   intersphinx_cache_limit = -1
		   todo_include_todos = True

		   # The suffix of source filenames.
		   source_suffix = '.rst'

		   # If true, '()' will be appended to :func: etc. cross-reference text.
		   add_function_parentheses = True

		   # If true, the current module name will be prepended to all description
		   # unit titles (such as .. function::).
		   add_module_names = True

		   # If true, SmartyPants will be used to convert quotes and dashes to
		   # typographically correct entities.
		   html_use_smartypants = True
