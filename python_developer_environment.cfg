# A build out useful for developers working
# on the backend code
[buildout]
extends =
		developer_zeo_environment.cfg

parts +=
	  omelette
	  z3c_sphinxdoc
	  senchacmd
	  app-minify
	  ext42
	  ext42-link


[senchacmd]
# NOTE: As of 4.0.1.45, senchacmd ships with an outdated
# SASS gem, meaning it won't compile our CSS. 
# So our tarball is customized to contain a newer
# SASS version in extensions/sencha-compass/
recipe = hexagonit.recipe.download
url = https://s3.amazonaws.com/dev.nextthought.com/senchacmd-40145-osx.tar.bz2
strip-top-level-dir = true

[senchacmd:linux]
url = https://s3.amazonaws.com/dev.nextthought.com/senchacmd-40145-lx64.tar.bz2

[ext42]
recipe = hexagonit.recipe.download
url = https://s3.amazonaws.com/dev.nextthought.com/ext-4.2.1.883.tar.bz2
strip-top-level-dir = true

[ext42-link]
# The webapp depends on having ext-4.2 as a top-level
# link inside its checkout
recipe = collective.recipe.cmd
on_install = true
cmds = ln -s ${ext42:location} ${buildout:sources-dir}/NextThoughtWebApp/src/main/ext-4.2

[environment]
webapp_path = ${buildout:sources-dir}/NextThoughtWebApp
loginapp_path = ${buildout:sources-dir}/NextThoughtLoginApp

[app-minify]
# Let us configure and control the analytics keys, path to senchacmd,
# etc. This could be lots better...
# FIXME: If you use jdk8 < b121, running app-minify.py ultimately fails with a typically useless error (with debug output on):
#   [INF] accumulating symbols for file /Users/jmadden/Projects/NextThoughtPlatform/nti.dataserver-buildout/parts/ext42/src/AbstractComponent.js
#   [ERR] Error executing page compilation com.sencha.exceptions.BasicException: com.sencha.exceptions.ExEval: javax.script.ScriptException: [object Error] in <eval> at line number 1
# FIXME: Running with b121, YUI compressor reports syntax errors
#   [INF] Compressing data with YuiJavascriptCompressor
#   [DBG] Load url is file:/Users/jmadden/Projects/NextThoughtPlatform/nti.dataserver-buildout/parts/senchacmd/lib/yuicompressor-2.4.7.jar
#	[ERR] C2009: YUI Parse Error (invalid property id => 			goto: 'showAssignmentAt',) -- unknown-file:209160:8
#	[ERR] C2009: YUI Parse Error (syntax error => 			goto: 'showAssignmentAt',) -- unknown-file:209160:9
#	[ERR] C2009: YUI Parse Error (syntax error => 			goup: 'showRoot') -- unknown-file:209161:9
#	[ERR] C2009: YUI Parse Error (syntax error => 		});) -- unknown-file:209162:4
#	[ERR] C2009: YUI Parse Error (invalid property id => 			goto: 'showStudentAt',) -- unknown-file:209697:8
#	[ERR] C2009: YUI Parse Error (syntax error => 			goto: 'showStudentAt',) -- unknown-file:209697:9
#	[ERR] C2009: YUI Parse Error (syntax error => 			goup: 'showRoot') -- unknown-file:209698:9
#	[ERR] C2009: YUI Parse Error (syntax error => 		});) -- unknown-file:209699:4
#	[ERR] C2009: YUI Parse Error (Compilation produced 8 syntax errors. => null) -- unknown-file:2
#	[ERR] Error executing page compilation Failed to compress input
# Could this just be my (JAM) setup?
recipe = z3c.recipe.filetemplate
source-directory = templates
dest-directory = ${deployment:root-directory}
files = app-minify

python = ${deployment:bin-directory}/python


[extra-sources]
nti.nose_traceback_info = git https://github.com/NextThought/nti.nose_traceback_info.git
nti.testing = svn https://repos.nextthought.com/svn/nti-svn/nti.testing/trunk
nti.app.testing = svn https://repos.nextthought.com/svn/nti-svn/nti.app.testing/trunk
z3c.recipe.sphinxdoc = git https://github.com/NextThought/z3c.recipe.sphinxdoc.git

NextThoughtWebApp = svn https://repos.nextthought.com/svn/nti-svn/NextThoughtWebApp/trunk egg=false
NextThoughtLoginApp = svn https://repos.nextthought.com/svn/nti-svn/NextThoughtLoginApp/trunk egg=false

[eggs]
dataserver_egg = nti.dataserver[tools,test]
# If you want to test buildout recipes that use install_develop
# for themselves, they must be included in the eggs
eggs +=
	 nti.nose_traceback_info
	 nti.testing
	 nti.app.testing
	 nti.recipes.zcml
	 elpy
	 linesman
	 uncommitted
	 z3c.recipe.sphinxdoc


[z3c_sphinxdoc]
# provides a script that builds
# all the documentation for all the
# projects listed in `eggs`.
# An alternative might be dataflake.docbuilder.
# Note that we are using a customized version so we can
# set more options.
recipe = z3c.recipe.sphinxdoc
eggs = ${eggs:eggs}
doc-eggs =
		 nti.dataserver
		 nti.app.products.courseware
		 nti.app.assessment
extensions = sphinx.ext.autodoc
		   	 sphinx.ext.todo
			 sphinx.ext.viewcode
			 sphinx.ext.intersphinx
			 repoze.sphinx.autointerface
			 sphinxcontrib.programoutput
default.css =
layout.html =
src-dir = ../docs
extra-conf =
		   # JAM: repoze.sphinx.autointerface 0.7.1 does not handle cross-refs correctly.
		   # A pull request is submitted (https://github.com/repoze/repoze.sphinx.autointerface/pull/3) with a
		   # cleaner solution. Until then, this should do the trick.
		   from sphinx.domains import ObjType
		   from sphinx.domains.python import PythonDomain

		   # Allow the :class: directive to xref interface objects through the search
		   # mechanism, i.e., prefixed with a '.', like :class:`.ITheInterface`
		   # (without this, an exact match is required)
		   PythonDomain.object_types['interface'] = ObjType( 'interface', 'interface', 'obj', 'class')
		   PythonDomain.object_types['class'].roles += ('interface',)

		   # epydoc is better at inherited members than sphinx, so leave that out of the defaults
		   autodoc_default_flags = ['members', 'show-inheritance',] # 'undoc-members', 'special-members']
		   autoclass_content = 'both'
		   intersphinx_mapping = {
		   'python':  ('http://docs.python.org/2.7/', None),
		   'boto': ('http://boto.readthedocs.org/en/latest/', None),
		   'gunicorn': ('http://docs.gunicorn.org/en/latest/', None),
		   'paste': ('http://pythonpaste.org/', None),
		   #	'zodb':    ('http://zodb.readthedocs.org/en/latest/', None),
		   #	'pyramid': ('http://docs.pylonsproject.org/projects/pyramid/en/latest/', None),
		   'pyquery': ('http://packages.python.org/pyquery/', None) }
		   intersphinx_cache_limit = -1
		   todo_include_todos = True

		   # The suffix of source filenames.
		   source_suffix = '.rst'

		   # If true, '()' will be appended to :func: etc. cross-reference text.
		   add_function_parentheses = True

		   # If true, the current module name will be prepended to all description
		   # unit titles (such as .. function::).
		   add_module_names = True

		   # If true, SmartyPants will be used to convert quotes and dashes to
		   # typographically correct entities.
		   html_use_smartypants = True
