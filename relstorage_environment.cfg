[buildout]
extends = base_environment.cfg
parts +=
	  blob_dirs
	  supervisor
	  zodb_conf
	  zodb_uri_conf

[blob_dirs]
recipe = z3c.recipe.mkdir
paths = ${user_storage:blob_dir}
mode = 0700

# To use this configuration as a base, you MUST
# define an [environment] section. You can
# do it in your extension file (fine for host names,
# but not the passwords) and/or in ~/.buildout/default.cfg
# (which is a good place to keep passwords). You can also
# specify the values on the buildout command line.

[base_storage]
name = BASE
data_dir = ${deployment:data-directory}
blob_dir = ${:data_dir}/${:name}.blobs
cache_module_name = memcache
cache_servers = ${environment:cache_servers}
commit_lock_timeout = 30
cache_local_mb = 200
poll_interval = 50
sql_db = ${:name}
sql_user = ${environment:sql_user}
sql_passwd = ${environment:sql_passwd}
sql_host = ${environment:sql_host}
client_zcml =
		<zodb ${:name}>
			pool-size 2
			database-name ${:name}
			cache-size 75000
			<zlibstorage>
				<relstorage ${:name}>
					blob-dir ${:blob_dir}
					cache-prefix ${:name}
					cache-servers ${:cache_servers}
					cache-module-name ${:cache_module_name}
					commit-lock-timeout ${:commit_lock_timeout}
					cache-local-mb ${:cache_local_mb}
					poll-interval ${:poll_interval}

					keep-history false
					pack-gc false
					<mysql>
						db ${:sql_db}
						user ${:sql_user}
						passwd ${:sql_passwd}
						host ${:sql_host}
					</mysql>
				</relstorage>
			</zlibstorage>
		</zodb>

# To add a new database, define
# a storage and fill in the details.
# Ref the storage section from the paths in zeo_dirs
# and the appropriate ZCML in the zeo and zodb_conf sections
[user_storage]
<= base_storage
name = Users


[zodb_conf]
recipe = collective.recipe.template
output = ${deployment:etc-directory}/zodb_conf.xml
input = inline:
		%import zc.zlibstorage
		%import relstorage

		${user_storage:client_zcml}

[trick-conf]
recipe = z3c.recipe.filetemplate
source-directory = templates
files = MARKER
interpreted-options = lower_names = buildout['user_storage']['name'].lower()

[zodb_uri_conf]
recipe = collective.recipe.template
output = ${deployment:etc-directory}/zeo_uris.ini
input = inline:
	  [ZODB]
	  uris = zconfig://${zodb_conf:output}#${trick-conf:lower_names}

# TODO: How to avoid repetition here? The filetemplate allows
# lower-casing through its pipes and filters, but we don't have that
# option here unless we pull in genshi (?). The name needs to be
# lowercased here for complicated reasons (see nti.dataserver.config).
# The trick of not really using a file but getting filetemplate to interpret
# the option works but isn't pretty
