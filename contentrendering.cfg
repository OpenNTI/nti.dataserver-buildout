[buildout]
# This buildout sets up parts for installing things
# needed for the content rendering process.

[tex-live-installer]
recipe = hexagonit.recipe.download
url = http://mirror.ctan.org/systems/texlive/tlnet/install-tl-unx.tar.gz
strip-top-level-dir = true

[tex-live-profile]
recipe = z3c.recipe.filetemplate
source-directory = templates
files = texlive.profile

texlive-dir = ${buildout:root-directory}/parts/texlive

[tex-live]
recipe = collective.recipe.cmd
on_install = true
# Even using the small distribution, it takes
# ~30 minutes to install this.
# We're creating it portable, so we may be able to
# store an archive of the dir and just unpack
# that?
cmds = ${tex-live-installer:destination}/install-tl -portable -profile ${buildout:root-directory}/etc/texlive.profile

[tex-live:macosx]
recipe = hexagonit.recipe.download
url = https://s3.amazonaws.com/dev.nextthought.com/texlive.tar.bz2
strip-top-level-dir = true

# See also integrationtests_environment
[phantomjs]
recipe = hexagonit.recipe.download
url = https://s3.amazonaws.com/dev.nextthought.com/phantomjs-2.0.0-development-macosx-201501031642.zip
strip-top-level-dir = true
excludes =
		 examples
		 README.md
		 third-party.txt

[phantomjs:linux]
url = https://s3.amazonaws.com/dev.nextthought.com/phantomjs-2.0.0-development-linux-x86_64-201501031641.tar.bz2

[imagemagick]
# Sadly the prebuilt-binaries do not offer
# *any* plugins, meaning they can't handle
# JPEG and PNG.
## recipe = hexagonit.recipe.download
## url = http://www.imagemagick.org/download/binaries/ImageMagick-x86_64-apple-darwin13.0.0.tar.gz
## strip-top-level-dir = true
recipe = hexagonit.recipe.cmmi
url = http://mirrors-usa.go-parts.com/mirrors/ImageMagick/releases/ImageMagick-6.9.0-4.tar.gz
md5sum = 94bfe90989c079cf6f1e3f4f219924cf 
keep-compile-dir = true
# The main things we need so far are libjpeg and libpng,
# and we install those.
CFLAGS = -I${libjpeg:location}/include -I${libpng:location}/include -I${zlib:location}/include  -O3
environment =
			CFLAGS= ${:CFLAGS}
			CPPFLAGS=${:CFLAGS}
			LDFLAGS=-L${libjpeg:location}/lib -L${libpng:location}/lib -L${zlib:location}/lib ${:rpath}
# sadly clang and gcc take different values for rpath, one
# requires =, one forbids it
rpath = -Wl,-rpath ${libjpeg:location}/lib -Wl,-rpath ${libpng:location}/lib -Wl,-rpath ${zlib:location}/lib
configure-options =
				  --disable-shared
				  --enable-static
				  --disable-dependency-tracking
				  --with-bzlib
				  --with-jpeg
				  --with-png
				  --with-xml
				  --with-zlib
				  --without-djvu
				  --without-dps
				  --without-fftw
				  --without-fontconfig
				  --without-fpx
				  --without-freetype
				  --without-jbig
				  --without-lzma
				  --without-pango
				  --without-perl
				  --without-tiff
				  --without-webp
				  --without-x

[imagemagick:linux]
rpath = -Wl,-rpath=${libjpeg:location}/lib -Wl,-rpath=${libpng:location}/lib -Wl,-rpath=${zlib:location}/lib
# JAM: SAJ: Testing threading issues on linux?
configure-options +=
				  --without-threads

[asymptote-gc]
recipe = hexagonit.recipe.download
url = http://www.hpl.hp.com/personal/Hans_Boehm/gc/gc_source/gc-7.2d.tar.gz
destination=${buildout:directory}/parts/asymptote

[asymptote]
recipe = hexagonit.recipe.cmmi
url = http://sourceforge.net/projects/asymptote/files/2.24/asymptote-2.24.src.tgz
make-targets =
			 all
			 install

[pngcrush]
recipe = hexagonit.recipe.cmmi
version = 1.7.82
url = http://downloads.sourceforge.net/project/pmt/pngcrush/${:version}/pngcrush-${:version}.tar.gz?r=http%3A%2F%2Fsourceforge.net%2Fprojects%2Fpmt%2Ffiles%2F&ts=1410127860&use_mirror=iweb
keep-compile-dir = true
configure-command = true
make-targets = all

[eggs]
# Add our installed binaries to the PATH for
# these utilities
initialization +=
			 os.environ['PATH'] = "${deployment:root-directory}/parts/phantomjs/bin" + os.pathsep + "${tex-live-profile:texlive-dir}/bin/x86_64-darwin" + os.pathsep + os.environ['PATH']
			 os.environ['PATH'] = "${imagemagick:location}/bin" + os.pathsep + os.environ['PATH']
			 os.environ['PATH'] = "${pngcrush:compile-directory}/pngcrush-${pngcrush:version}" + os.pathsep + os.environ['PATH']
			 os.environ['MAGICK_HOME'] = "${imagemagick:location}"
			 os.environ['DYLD_LIBRARY_PATH'] = "${imagemagick:location}/lib"
