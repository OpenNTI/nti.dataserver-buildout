[buildout]
# This buildout sets up parts for installing things
# needed for the content rendering process.

[tex-live-installer]
recipe = hexagonit.recipe.download
url = http://mirror.ctan.org/systems/texlive/tlnet/install-tl-unx.tar.gz
strip-top-level-dir = true

[tex-live-profile]
recipe = z3c.recipe.filetemplate
source-directory = templates
files = texlive.profile

texlive-dir = ${buildout:root-directory}/parts/texlive

[tex-live]
recipe = collective.recipe.cmd
on_install = true
# Even using the small distribution, it takes
# ~30 minutes to install this.
# We're creating it portable, so we may be able to
# store an archive of the dir and just unpack
# that?
cmds = ${tex-live-installer:destination}/install-tl -portable -profile ${buildout:root-directory}/etc/texlive.profile

[tex-live:macosx]
recipe = hexagonit.recipe.download
url = https://s3.amazonaws.com/dev.nextthought.com/texlive.tar.bz2
strip-top-level-dir = true

[phantomjs]
recipe = hexagonit.recipe.download
url = https://phantomjs.googlecode.com/files/phantomjs-1.9.2-macosx.zip
strip-top-level-dir = true
excludes =
		 examples
		 README.md
		 third-party.txt

[phantomjs:linux]
url=https://phantomjs.googlecode.com/files/phantomjs-1.9.2-linux-x86_64.tar.bz2

[libjpeg]
# requires nasm being installed, the NASM variable can control that
recipe = hexagonit.recipe.cmmi
url = http://downloads.sourceforge.net/project/libjpeg-turbo/1.3.0/libjpeg-turbo-1.3.0.tar.gz?r=http%3A%2F%2Fsourceforge.net%2Fprojects%2Flibjpeg-turbo%2Ffiles%2F1.3.0%2F&ts=1383588916&use_mirror=softlayer-dal
configure-options =
				  --with-jpeg8
				  --host x86_64-apple-darwin
make-options =
			 prefix=${buildout:root-directory}/parts/libjpeg
			 libdir=${buildout:root-directory}/parts/libjpeg/lib

[libpng]
recipe = hexagonit.recipe.cmmi
# 16 is out, but imagemagick wants 15
url = http://downloads.sourceforge.net/project/libpng/libpng15/1.5.17/libpng-1.5.17.tar.bz2?r=http%3A%2F%2Fsourceforge.net%2Fprojects%2Flibpng%2Ffiles%2Flibpng15%2F1.5.17%2F&ts=1383590429&use_mirror=hivelocity

[imagemagick]
# Sadly the prebuilt-binaries do not offer
# *any* plugins, meaning they can't handle
# JPEG and PNG.
## recipe = hexagonit.recipe.download
## url = http://www.imagemagick.org/download/binaries/ImageMagick-x86_64-apple-darwin13.0.0.tar.gz
## strip-top-level-dir = true
recipe = hexagonit.recipe.cmmi
url = http://www.imagemagick.org/download/ImageMagick.tar.gz
keep-compile-dir = true
# The main things we need so far are libjpeg and libpng,
# and we install those
environment =
			CFLAGS=-I${libjpeg:location}/include -I${libpng:location}/include -I/opt/local/include -O3
			LDFLAGS=-L${libjpeg:location}/lib -L${libpng:location}/lib -L/opt/local/lib
configure-options =
				  --enable-shared
				  --enable-static
				  --without-frozenpaths
				  --with-bzlib
				  --with-png
				  --with-tiff
				  --with-zlib
				  --with-jp2
				  --without-perl
				  --with-xml
				  --with-webp
				  --with-jpeg

[asymptote-gc]
recipe = hexagonit.recipe.download
url = http://www.hpl.hp.com/personal/Hans_Boehm/gc/gc_source/gc-7.2d.tar.gz
destination=${buildout:directory}/parts/asymptote

[asymptote]
recipe = hexagonit.recipe.cmmi
url = http://sourceforge.net/projects/asymptote/files/2.24/asymptote-2.24.src.tgz
make-targets =
			 all
			 install

[eggs]
# Add our installed binaries to the PATH for
# these utilities
initialization +=
			 os.environ['PATH'] = "${deployment:root-directory}/parts/phantomjs/bin" + os.pathsep + "${tex-live-profile:texlive-dir}/bin/x86_64-darwin" + os.pathsep + os.environ['PATH']
			 os.environ['PATH'] = "${imagemagick:location}/bin" + os.pathsep + os.environ['PATH']
			 os.environ['MAGICK_HOME'] = "${imagemagick:location}"
			 os.environ['DYLD_LIBRARY_PATH'] = "${imagemagick:location}/lib"
