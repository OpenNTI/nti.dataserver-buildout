	sendfile		on;
	tcp_nopush		on;
	directio		1m;
	${aio}

	keepalive_timeout  65;
	keepalive_disable none;

	gzip  on;
	gzip_static on;
	gzip_types text/css text/javascript application/xml application/x-javascript application/javascript text/xml ;
	gzip_comp_level 9;
	gzip_proxied any;
	gzip_vary on;
	gzip_http_version 1.0;

	#need to map the landing cookie.  Can we get this in the location somehow?
	map $http_cookie $site_landing_name {
		default ${default_landing_site_name};
		~nti.landing_site_name=(?<mc>[^\;]+) $mc;
	}

	open_file_cache max=1000; # inactive=600s;
	open_file_cache_errors on;

	server {
		listen ${nginx_http_port};
		# For single machine or developers,
		# listening on a unix socket is convenient
		# for use with haproxy
		listen unix:${deployment:run-directory/nginx.sock};
		root   ${global_content_directory|shell-path};
		server_name	 ${global_host_name};
		proxy_http_version 1.1;
		etag on;
		if_modified_since before;
		lingering_close on;

		set_real_ip_from 192.168.0.0/24;
		set_real_ip_from 10.50.0.0/24;
		set_real_ip_from 10.50.8.0/24;
		set_real_ip_from 127.0.0.1;
		set_real_ip_from unix:;
		real_ip_recursive on;
		real_ip_header X-Forwarded-For;

		location /this/should/not/exist.html {
			error_page 404 =503 /maintenance/index.html;
		}

		location / {
			index  index.html index.htm;
			alias ${webapp_path/src/main/|shell-path}/;
			expires +1h;
			add_header Cache-Control proxy-revalidate;
			#a header so that we can do a head request and try to bust the cached redirect... see login app.
			add_header X-NTI-WebApp true;
		}

		location /config.js {
			alias ${webapp_config_file};
		}

		location ${global_content_location} {
			alias ${global_content_directory/.|shell-path}/;
		}

		location ${global_content_location}welcome/ {
			alias ${webapp_path/src/main/content/welcome/|shell-path}/;
		}

		location /purchasables/ { # JAM: Not sure what this is
			alias /var/www/html/purchasables/;
		}

		location ${loginapp_location} {
			alias ${loginapp_path/src/main/WebApp/|shell-path}/;

			expires +1h;
			add_header Cache-Control proxy-revalidate;
			# We get 404s here when there is not a valid /login/landing/the_site.com/ on disk
			# So silently make that simply /login/.
			# This is a hack; the right solution would be to use try_files
			# in the /landing location to automatically detect the non-existence
			# of the file. (You can't nest if statements or the -e/-d if tests
			# could be useful.)
			error_page 404 =200 /login/index.html;
		}

 		# JAM: The locations beginning with /NextThoughtWebApp/ are for
		# BWC (old bookmarks) only right now.
		location /NextThoughtWebApp/ {
			alias ${webapp_path/src/main/|shell-path}/;
		}

		location /NextThoughtWebApp/config.js {
			alias ${webapp_config_file};
		}


		# Rewrite landing passed on the landing site cookie.
		# Haproxy shouldn't let us here without that cookie,
		# except in environments that have only one landing site.
		location /landing {
			# Try files occurs within this context?
			alias ${loginapp_path/src/main/WebApp/|shell-path}/landing;

			# Redirect to the default port (haproxy), not our local
			# port, which isn't reachable.
			port_in_redirect off;
			if ( $site_landing_name ) {
			   # If the browser sent a request without a trailing slash,
		   	   # give it one so that relative resources resolve correctly.
			   rewrite ^/landing$ /landing/ permanent;
			   # Everything else, rewrite beneath the landing site for the site, if it
			   # appears to exist. Otherwise, go to login (handled by
			   # the hack in the /login location.)
			   rewrite ^/landing/(.*)$ /login/landing/$site_landing_name/$1 last;
			}
		}

		# A bunch of things to cooperate with the /login hack
		location /landing/resources/ {
			alias ${loginapp_path/src/main/WebApp/|shell-path}/resources/;
		}
		location /landing/js/ {
			alias ${loginapp_path/src/main/WebApp/|shell-path}/js/;
		}
		location /landing/defaults.js {
			rewrite ^/landing/defaults.js$ /login/defaults.js last;
		}

		# deny access to .htaccess files, if Apache's document root
		# concurs with nginx's one
		#
		location ~ /\.ht {
			deny  all;
		}

	}
