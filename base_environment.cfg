[buildout]
extends = buildout.cfg
parts +=
	  passwords
	  directories
	  zcml
	  redis-conf
	  pserve-conf

[passwords]
recipe = nti.recipes.passwords
# Real environments will specify the
# file = argument, pointing to a .cast5
# file stored in source control. All the
# settings in that file that have the same name
# as this section will be added to this section
# and available for use in other parts.
sql_passwd =
smtp_passwd =

[environment]
# The environment part defines some settings
# that are specific to the environment and
# often used in more than one other part.
sql_user = ec2user
sql_host = localhost
cache_servers = localhost:11211
smtp_server =
smtp_from = automated-emails@nextthought.com
smtp_username =
smtp_use_tls = true
# port 25 is often blocked by ISPs, use one of the alternates, 465 or 587
smtp_port = 587

# See the passwords recipe
sql_passwd = ${passwords:sql_passwd}
smtp_passwd = ${passwords:smtp_passwd}

[deployment]
root-directory = ${buildout:directory}
bin-directory = ${buildout:directory}/bin
etc-directory = ${buildout:directory}/etc
log-directory = ${buildout:directory}/var/log
run-directory = ${buildout:directory}/var
rc-directory = ${buildout:directory}/bin/rc
data-directory = ${buildout:directory}/data
logrotate-directory = ${buildout:directory}/etc/logrotate.d
crontab-directory = ${buildout:directory}/etc/cron.d
mail-directory = ${:run-directory}/maildir
user=foo

[directories]
recipe = z3c.recipe.mkdir
create-intermediate = true
mode = 0700
paths =
	  ${deployment:etc-directory}
	  ${deployment:run-directory}
	  ${deployment:data-directory}
	  ${deployment:log-directory}
	  ${deployment:rc-directory}
	  ${deployment:logrotate-directory}
	  ${deployment:crontab-directory}
	  ${deployment:mail-directory}

[zcml]
# Normally for specific environments, this will be extended
# using the <= syntax to pull in desired features
recipe = nti.recipes.zcml
deployment = deployment

# NOTE: the app.products.ou is here only for initial testing
# convenience
package_zcml =
			 nti.app.client_preferences
			 nti.app.products.ou
			 nti.app.sites.alpha
			 nti.app.sites.prmia
			 nti.app.sites.columbia
			 nti.app.sites.demo
			 nti.app.sites.law
			 nti.app.sites.litworld
			 nti.app.sites.mathcounts
			 nti.app.sites.prmia
			 nti.app.sites.rwanda
package_location = package-includes
package_features = in-buildout

# Directly copying the packages is the easiest way
# to get them all loaded. If something doesn't have a set
# of pyramid views, you can use the -= syntox
# or likewise the += syntax
pyramid_zcml = ${:package_zcml}
pyramid_location = pyramid-includes
pyramid_file = pyramid
pyramid_features = in-buildout

[redis-conf]
recipe = z3c.recipe.filetemplate
extends = environment
source-directory = templates
files = redis.conf main.ini
# Disable tcp usage by default
port = 0
# Saving.
# JAM: The default save settings (900/1 300/10, 60/10000) are
# probably insufficient for development purposes (few keys change, and
# restarts are rapid and often kill the redis server). Therefore, our
# default development configuration saves much *too* frequently for
# realworld use: every 30 seconds if anything has changed.
save-settings = save 30 1

[pserve-conf]
recipe = z3c.recipe.filetemplate
# The recipe doesn't take into account
# variables from other sections used in the template
# when determining if it needs to update. Using
# extends seems to fix this
extends = environment
source-directory = templates
files = pserve.ini

http-port = 8081
debug = true
deploy_root = /Library/WebServer/Documents
# For deployment, preloading is awesome. But for development,
# it interfers with running a debugger in the sub-process since it doesn't exec()
preload_app = false
workers = 1
timeout = 3000
mail_queue_path = ${deployment:mail-directory}
email_error_subject_prefix = Error
email_error_from = automated.emails@nextthought.com
email_error_to =
email_default_from = no-reply@nextthought.com

[supervisor]
recipe = collective.recipe.supervisor

supervisord-conf = ${deployment:etc-directory}/supervisord.conf
http-socket = unix
file = ${deployment:run-directory}/supervisord.sock
serverurl = unix:///${:file}
childlogdir = ${deployment:log-directory}
logfile = ${deployment:log-directory}/supervisord.log
pidfile = ${deployment:run-directory}/supervisord.pid
loglevel = info
supervisord-environment =
						DATASERVER_DIR=${deployment:root-directory},PYTHONHASHSEED=random

pserve-ini = ${deployment:etc-directory}/pserve.ini
programs =
		 999 nti_pserve ${deployment:root-directory}/bin/pserve [${:pserve-ini}]
		 10 redis redis-server [${deployment:etc-directory}/redis.conf]
