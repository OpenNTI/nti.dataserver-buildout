1) Download/Install Xcode
2) Download/Install Xcode command line tools ()
3) Download/Install latest [Oracle] JDK
4) Install macports
5) execute:
	sudo port install python27
	sudo port install py27-setuptools
	sudo port install py27-yaml
	sudo port install py27-virtualenv
	sudo port install py27-virtualenvwrapper
	sudo port install libxml
	sudo port install libxml2
	sudo port install nasm
	sudo port install pcre
	sudo port install cyrus-sasl2
	sudo port install graphviz-devel
	sudo port install wget
	sudo port install openjpeg
	sudo port xmlsec
	sudo port freetds +odbc

	(Optional)

	sudo port install bash
	sudo port install coreutils

6) edit [bash] profile located in your home directory (e.g. ~/.profile) and add to the PATH variable
	/opt/local/bin:/opt/local/Library/Frameworks/Python.framework/Versions/2.7/bin

	(so it would look like
		export PATH=/opt/local/bin:/opt/local/Library/Frameworks/Python.framework/Versions/2.7/bin:/opt/local/sbin:/opt/local/include:$PATH)

	[then add]

	export WORKON_HOME=~/VirtualEnvs
	source `which virtualenvwrapper.sh`

	[save]

	make sure you point to your macports python . To do so type
		which python
		and it should be /opt/local/Library/Frameworks/Python.framework/Versions/2.7/bin/python

7) source bash profile (or restart terminal) e.g (source .profile)

8) execute:
	mkvirtualenv nti.dataserver-buildout

8.1) cd ~/VirtualEnvs/nti.dataserver-buildout
    ./bin/easy_install-2.7 -U setuptools==33.1.1

9) execute:
	workon  nti.dataserver-buildout

10) Create a Projects directory under ~/  (HOME DIRECTORY)
	execute:
		mkdir ~/Projects

11) cd ~/Projects
	execute:
		svn co https://repos.nextthought.com/svn/nti-svn/NextThoughtPlatform/trunk/nti.dataserver-buildout nti.dataserver-buildout

12) cd nti.dataserver-buildout
	execute:
		python bootstrap.py

13) edit dataserver_buildout.cfg file and comment # lxml entry e.g.

parts =
	libgmp
	pycrypto
	libyaml
	pyyaml
#	lxml

14) execute (long process)
		./bin/buildout -c python_developer_environment.cfg

15) execute
		svn revert dataserver_buildout.cfg

16) Softlinks in /usr/local/include:
    freetds -> /opt/local/include/freetds/
    graphviz -> /opt/local/include/graphviz/
    openssl -> /opt/local/include/openssl

17) in ~/Projects create library and images directories
	execute:
		mkdir DataserverGlobalLibrary
		mkdir hosted_badge_images

	[Download Sample content if available]

18) edit ~/VirtualEnvs/nti.dataserver-buildout/bin/postactivate and add
	PATH=/Users/{your user}/Projects/nti.dataserver-buildout/bin:$PATH

19) create default .buildout config
	execute:
		mkdir ~/.buildout

	create and edit a file called default.cfg in your default buildout directory
		e.g. vi ~/.buildout/default.cfg

	add the following to the file

	[buildout]
	eggs-directory = /Users/{your user}/Projects/nti.dataserver-buildout/eggs
	download-cache = /Users/{your user}/.buildout/cache
	always-checkout = true

	[init_env]
	args = --with-example

	[zeo]
	name=data

==================

[Optional]

20) Start dataserver
	execute:
		cd ~/Projects/nti.dataserver-buildout
		./bin/supervisord -n

21) Log into the dataserver at
	http://localhost:8082/login

22) edit (with sudo) the file /etc/hosts and add the following entries

127.0.0.1    alibra.dev
127.0.0.1    alpha.dev
127.0.0.1    columbia.dev
127.0.0.1    connect.dev
127.0.0.1    demo.dev
127.0.0.1    edbooks.dev
127.0.0.1    history.dev
127.0.0.1    i2.dev
127.0.0.1    iled.dev
127.0.0.1    janux.dev
127.0.0.1    k20.dev
127.0.0.1    litworld.dev
127.0.0.1    mathcounts.dev
127.0.0.1    oc.dev
127.0.0.1    okstate.dev
127.0.0.1    prmia.dev
127.0.0.1    ifsta.dev
127.0.0.1    santafesouth.dev
127.0.0.1    spurstartup.dev
127.0.0.1    symmys.dev
127.0.0.1    genius.dev
127.0.0.1    housing.dev
127.0.0.1    codesooner.dev

[Daily]

23) refresh the latest code
	execute:
		workon nti.dataserver-buildout
		cd ~/Projects/nti.dataserver-buildout
		svn up
		./bootstrap.sh
		./bin/buildout -c python_developer_environment.cfg
		./bin/app-minify

	after the .buildout has been run the ~/Projects/nti.dataserver-buildout/etc/haproxy/haproxy.cfg is overwritten so execute step 23 if required

==================

[Content Generation]

Install the following ports:
	- libpng
	- freetype
	- pngcrush
	- texlive
	- texlive-basic
	- texlive-bibtex-extra
	- texlive-bin
	- texlive-bin-extra
	- texlive-common
	- texlive-context
	- texlive-fonts-extra
	- texlive-fonts-recommended
	- texlive-fontutils
	- texlive-formats-extra
	- texlive-generic-extra
	- texlive-generic-recommended
	- texlive-htmlxml
	- texlive-lang-czechslovak
	- texlive-lang-english
	- texlive-lang-european
	- texlive-lang-french
	- texlive-lang-german
	- texlive-lang-italian
	- texlive-lang-polish
	- texlive-lang-portuguese
	- texlive-lang-spanish
	- texlive-latex
	- texlive-latex-extra
	- texlive-latex-recommended
	- texlive-luatex
	- texlive-math-extra
	- texlive-metapost
	- texlive-pictures
	- texlive-plain-extra
	- texlive-publishers
	- texlive-science
	- texlive-xetex
	- pdf2svg
	- poppler
	- ImageMagick
	- openexr
	- liblqr
	- npm

[dataserver (Optional)]
	- xpdf
	- gtk2
	- jsmin
	- asymptote
	- enchant
	- mysql56
	- mysql56-server
