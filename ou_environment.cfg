[buildout]
extends =
    haproxy_nginx_environment.cfg
    relstorage_environment.cfg
always-checkout = true
# NOTE: When extending multiple base configs,
# only the parts from the bottom config are
# installed by default (even if they all use 'parts +=').
# So if we want to install parts from both configs,
# we need to explicitly list them.
parts +=
    haproxy
    haproxy-conf
    nginx
    nginx-conf
    qp-cron
    memcached


[product-sources]
<= product-ou-sources
   product-courses-sources

[product-zcml]
package_zcml =
			 ${product-ou-eggs:eggs}
			 ${product-courses-eggs:eggs}

[eggs]
eggs +=
	 ${product-ou-eggs:eggs}
	 ${product-courses-eggs:eggs}

[passwords]
file = ou_passwords.pass.cast5

[relstorages]
shared-blob-dir = false
storages = Users Users_1 Users_2

[relstorages_opts]
sql_adapter_extra_args =
					   port 20034

[relstorages_users_storage_opts]
sql_host = 10.50.8.200
sql_passwd = ${passwords:sql_users_passwd}

[relstorages_users_1_storage_opts]
sql_host = 10.50.8.201
sql_passwd = ${passwords:sql_users_1_passwd}

[relstorages_users_2_storage_opts]
sql_host = 10.50.8.200
sql_passwd = ${passwords:sql_users_2_passwd}

[environment]
sql_user = ntiuser
cache_servers = 10.50.0.100:20035
smtp_server = email-smtp.us-east-1.amazonaws.com
smtp_username = AKIAIOO43PY4ANWEYP2Q
smtp_port = 587
global_host_name = janux.ou.edu
global_content_directory = ${buildout:directory}/../DataserverGlobalLibrary
global_content_location = /content/
webapp_location = /
loginapp_location = /login/

nginx_http_port = 8080
dataserver_http_port = 8081
haproxy_http_port = 8082
# SAJ: listen to all interfaces to allow load balancers to submit
# decrypted SSL traffic for processing
haproxy_http_addr = 0.0.0.0
haproxy_redirect_to_ssl_port = 7999
stunnel_socket_owner = ntiuser
haproxy_stunnel_socket_user = user ${:stunnel_socket_owner}

[nginx-conf]
nginx_daemon = off

[haproxy-conf]
haproxy_addl_ssl_acls = acl is_ssl so_id ${environment:haproxy_http_port}

[redis-conf]
port = 20033
redis_client_url = redis://10.50.0.100:${:port}
# Use production-level database
# persistence timing
save-settings =
			  save 900 1
			  save 300 10
			  save 60 10000

[pserve-conf]
email_error_subject_prefix = OU Error:
email_error_from = automated.emails@nextthought.com
email_error_to = support@nextthought.com

[gunicorn-conf]
preload_app = true
# NOTE: Double check that value if there are problems with ssl
# and x-forwarded-protocol


[library-conf]
library-type = filesystemLibrary
library-args =
			 directory="${environment:global_content_directory}"
			 prefix="${environment:global_content_location}"

[webapp-conf]
allow_mobile_safari = true
unauth_location = /login/
features =
         "presence-menu": true,
         "custom-status": true,
         "state-transactions": true,
         "mutable-forums": true,
         "v2contacts" : true,
         "v2profiles": true,
         "fancy-scroll": true,
         "notepad": false,
         "transcript-follow-video": true,
         "remove-history-tab": true

[supervisor]
programs +=
         1 nginx ${deployment:bin-directory}/nginx
         1 haproxy ${deployment:bin-directory}/haproxy [-f ${deployment:etc-directory}/haproxy/haproxy.cfg -db]
         ${memcached-conf:memcached-supervisor}
