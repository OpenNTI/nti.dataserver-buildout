[buildout]
extends =
	webapps.cfg
	haproxy_nginx_environment.cfg
	relstorage_environment.cfg
	hypatia.cfg
	badges.cfg
always-checkout = true
# NOTE: When extending multiple base configs,
# only the parts from the bottom config are
# installed by default (even if they all use 'parts +=').
# So if we want to install parts from both configs,
# we need to explicitly list them.
parts +=
	  haproxy
	  haproxy-conf
	  nginx
	  nginx-conf
	  qp-cron
	  memcache-mon-cron
	  memcached
	  senchacmd
	  stunnel-cert
	  stunnel
	  compass
	  app-minify
	  ext42
	  ext42-link
	  tahrir-conf

[product-sources]
<= product-ou-sources
   product-courses-sources

[eggs]
eggs +=
	 ${product-ou-eggs:eggs}
	 ${product-courses-eggs:eggs}
	 ${badges-ALL-eggs:eggs}

[zcml]
package_features += janux_env
						
[webapp-versions]
NextThoughtWebApp = @45034
NextThoughtLoginApp = @45001

[server-versions]
All = @45028

[app-minify]
analytics-key = -a UA-25900586-2,ou.edu
# Set this to --itunes=XXX to get an iOS safari banner for an app
itunes = --itunes=795983686

[passwords]
file = ou_passwords.pass.cast5

[relstorages]
shared-blob-dir = false
storages = Users Users_1_Prod Users_2_Prod

[relstorages_opts]
sql_adapter_extra_args =
					   port 20034

[relstorages_users_storage_opts]
sql_host = 10.50.2.200
sql_passwd = ${passwords:sql_users_passwd}

[relstorages_users_1_prod_storage_opts]
sql_host = 10.50.2.201
sql_passwd = ${passwords:sql_users_1_passwd}

[relstorages_users_2_prod_storage_opts]
sql_host = 10.50.2.200
sql_passwd = ${passwords:sql_users_2_passwd}

[environment]
sql_user = ntiuser
cache_servers = 10.50.0.100:20035
smtp_server = email-smtp.us-east-1.amazonaws.com
smtp_username = AKIAIOO43PY4ANWEYP2Q
smtp_port = 587
global_host_name = janux.ou.edu
global_content_directory = ${buildout:directory}/../DataserverGlobalLibrary
global_content_location = /content/

nginx_http_port = 20030
nginx_proxy_port = 20032
dataserver_http_port = 20031
haproxy_http_port = 20036
# SAJ: listen to all interfaces to allow load balancers to submit
# decrypted SSL traffic for processing
haproxy_http_addr = 0.0.0.0
haproxy_redirect_to_ssl_port = 20037
stunnel_socket_owner = ntiuser-ou
haproxy_stunnel_socket_user = user ${:stunnel_socket_owner}

# Because of the order of inclusion, we need this here
webapp_path = ${buildout:sources-dir}/NextThoughtWebApp
loginapp_path = ${buildout:sources-dir}/NextThoughtLoginApp

[nginx-conf]
nginx_daemon = off

# The default landing site name. Set this in environments
# that only hae one landing site so that deep links
# work even without the site cookie.
default_landing_site_name = 'janux.ou.edu'

# Since we have the whole machine, let nginx
# pick its own worker count
nginx_workers = auto

[haproxy-conf]
haproxy_addl_ssl_acls = acl is_ssl so_id ${environment:haproxy_http_port}

# We have a frontend sending us proxy protocol
haproxy_http_accept_proxy = accept-proxy

[redis-conf]
port = 20033
redis_client_url = redis://10.50.0.100:${:port}
# Use production-level database
# persistence timing
save-settings =
			  save 900 1
			  save 300 10
			  save 60 10000

[tahrir]
dbname = Tahrir
user = ntitahrir
twophase = True
autocommit = False
driver = mysql+pymysql
host = 10.50.2.201:20034
password = ${passwords:sql_users_passwd}

[tahrir-conf]
recipe = z3c.recipe.filetemplate
source-directory = templates
dest-directory = ${deployment:root-directory}
files = 888-nti.app.tahrir.zcml

[pserve-conf]
email_error_subject_prefix = OU Error:
dataserver_log_level = INFO

[gunicorn-conf]
preload_app = true

# Limit requests before restart
#max_requests = 3500
# Distribute load better across instances
worker_connections = 250
# Match workers to pool-size to available memcache connections
# Go slightly below that to try to optimize db cache, since load
# doesn't seem to touch 40 workers
workers = 30

[memcached-conf]
memcached-port = 20035
extra-opts = -m 4096 -c 20000

[library-conf]
library-type = filesystemLibrary
library-args =
			 directory="${environment:global_content_directory}"
			 prefix="${environment:global_content_location}"

[webapp-conf]
enable_logging = false
allow_mobile_safari = true
unauth_location = /login/
features =
         "presence-menu": true,
         "custom-status": true,
         "state-transactions": true,
         "mutable-forums": true,
         "v2contacts" : true,
         "v2profiles": true,
         "fancy-scroll": true,
         "notepad": false,
         "transcript-follow-video": true,
		 "threaded-forums":true,
		 "video-settings":true,
         "remove-history-tab": true,
		 "bulk-resolve-users": false,
		 "kaltura.progressive": true,
		 "request-alias-change": true,
		 "notifications": true,
		 "analytic-reports":true,
		  "badges":true

obscure_usernames = true

#Open external PDF Content Card links in a new tab
external_pdf_new_window = true

[supervisor]
pserve_group_programs = pserve,hypatia
programs +=
         1 nginx ${deployment:bin-directory}/nginx
         1 haproxy ${deployment:bin-directory}/haproxy [-f ${deployment:etc-directory}/haproxy/haproxy.cfg -db]
         ${memcached-conf:memcached-supervisor}
         99 hypatia ${deployment:bin-directory}/nti_hypatia_indexer [-v -m ${hypatia-conf:mintime} -x ${hypatia-conf:maxtime} -l ${hypatia-conf:limit}]

[boto]
aws_access_key_id = AKIAJVAIKRRDR5CL4OBQ
aws_secret_access_key = ${passwords:aws_secret_access_key}
