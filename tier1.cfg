[buildout]
extends = 
        supervisor.cfg
        haproxy_nginx_stunnel.cfg

parts +=
      haproxy
      haproxy-conf
      stunnel
      stunnel-conf-janux
      stunnel-conf-nextthought
      stunnel-conf-symmys
      supervisor

[stunnel-conf-janux]
recipe = z3c.recipe.filetemplate
source-directory = templates
dest-directory = ${deployment:root-directory}
force-overwrite = true
files = stunnel-janux_ou_edu.conf
stunnel_cert_file = /opt/nti/ssl_certs/janux_ou_edu_2014_post_heartbleed.pem
stunnel_https_address = 156.110.241.10
stunnel_https_port = 443
stunnel_foreground = no
stunnel_socket = ${deployment:run-directory}/ssl-frontend-janux_ou_edu.sock
stunnel_pid_file = ${deployment:run-directory}/stunnel-janux_ou_edu.pid

[stunnel-conf-nextthought]
recipe = z3c.recipe.filetemplate
source-directory = templates
dest-directory = ${deployment:root-directory}
force-overwrite = true
files = stunnel-STAR_nextthought_com.conf
stunnel_cert_file = /opt/nti/ssl_certs/STAR_nextthought_com_2014_post_heartbleed.pem
stunnel_https_address = 156.110.241.12
stunnel_https_port = 443
stunnel_foreground = no
stunnel_socket = ${deployment:run-directory}/ssl-frontend-STAR_nextthought_com.sock
stunnel_pid_file = ${deployment:run-directory}/stunnel-STAR_nextthought_com.pid

[stunnel-conf-nextthought-alpha]
recipe = z3c.recipe.filetemplate
source-directory = templates
dest-directory = ${deployment:root-directory}
force-overwrite = true
files = stunnel-alpha_nextthought_com.conf
stunnel_cert_file = /opt/nti/ssl_certs/STAR_nextthought_com_2014_post_heartbleed.pem
stunnel_https_address = 156.110.241.13
stunnel_https_port = 443
stunnel_foreground = no
stunnel_socket = ${deployment:run-directory}/ssl-frontend-alpha_nextthought_com.sock
stunnel_pid_file = ${deployment:run-directory}/stunnel-alpha_nextthought_com.pid

[stunnel-conf-symmys]
recipe = z3c.recipe.filetemplate
source-directory = templates
dest-directory = ${deployment:root-directory}
force-overwrite = true
files = stunnel-STAR_symmys_com.conf
stunnel_cert_file = /opt/nti/ssl_certs/STAR_symmys_com_2014.pem
stunnel_https_address = 156.110.241.14
stunnel_https_port = 443
stunnel_foreground = no
stunnel_socket = ${deployment:run-directory}/ssl-frontend-STAR_symmys_com.sock
stunnel_pid_file = ${deployment:run-directory}/stunnel-STAR_symmys_com.pid

#[stunnel-cert]
# For creating the stunnel cert.
# In this case, we simply copy a default,
# but for production uses, use openssl.
# This should come *before* stunnel itself is built
# to avoid interactive prompts
#recipe = collective.recipe.cmd
#on_install = true
#cmds = cp ${buildout:directory}/certs/stunnel_default.pem ${environment:stunnel_cert_file}

[haproxy-conf]
recipe = z3c.recipe.filetemplate
source-directory = templates
dest-directory = ${deployment:root-directory}
# the main conf file is already installed
# as part of building nginx, we must overwrite it
force-overwrite = true
files = haproxy-tier1.cfg haproxy-tier1-priviledged.cfg

# Max Haproxy connections (depends on ulimit)
haproxy_maxconn = 60000

haproxy_http_addr = 0.0.0.0
haproxy_redirect_to_ssl_port = 80
stunnel_socket_owner = ntiuser
haproxy_stunnel_socket_user = user ${:stunnel_socket_owner}

# What we need to listen to
haproxy_listen_ports = 
    bind ${stunnel-conf-nextthought:stunnel_socket} ${:haproxy_stunnel_socket_user} mode 600 id 42 accept-proxy
        bind ${stunnel-conf-janux:stunnel_socket} ${:haproxy_stunnel_socket_user} mode 600 id 43 accept-proxy
        bind ${stunnel-conf-symmys:stunnel_socket} ${:haproxy_stunnel_socket_user} mode 600 id 44 accept-proxy
        bind ${stunnel-conf-nextthought-alpha:stunnel_socket} ${:haproxy_stunnel_socket_user} mode 600 id 45 accept-proxy

# IDs of the packets that came from stunnel
haproxy_ssl_acls =
    acl is_ssl so_id 42
        acl is_ssl so_id 43
        acl is_ssl so_id 44
        acl is_ssl so_id 45

# We need to define our host to environment mappings
haproxy_hostname_backend_map =
    acl is_backend2 hdr_dom(host) -i alpha
        acl is_backend0 hdr_dom(host) -i alibra
        acl is_backend2 hdr_dom(host) -i alibra-alpha
        acl is_backend0 hdr_dom(host) -i augsfluoroscopy
        acl is_backend2 hdr_dom(host) -i augsfluoroscopy-alpha
        acl is_backend7 hdr_dom(host) -i ccmf
        acl is_backend7 hdr_dom(host) -i cms
        acl is_backend0 hdr_dom(host) -i columbia
        acl is_backend5 hdr_dom(host) -i contentdev
        acl is_backend0 hdr_dom(host) -i demo
        acl is_backend2 hdr_dom(host) -i demo-alpha
        acl is_backend0 hdr_dom(host) -i eval
        acl is_backend2 hdr_dom(host) -i eval-alpha
        acl is_backend0 hdr_dom(host) -i ft
        acl is_backend0 hdr_dom(host) -i gloria-mundi
        acl is_backend3 hdr_dom(host) -i janux
        acl is_backend0 hdr_dom(host) -i lab
        acl is_backend0 hdr_dom(host) -i law
        acl is_backend0 hdr_dom(host) -i litworld
        acl is_backend2 hdr_dom(host) -i litworld-alpha
        acl is_backend1 hdr_dom(host) -i mathcounts
        acl is_backend2 hdr_dom(host) -i mathcounts-alpha
        acl is_backend6 hdr_dom(host) -i morgan-wiley
        acl is_backend2 hdr_dom(host) -i morgan-wiley-alpha
        acl is_backend0 hdr_dom(host) -i oc
        acl is_backend2 hdr_dom(host) -i oc-alpha
        acl is_backend2 hdr_dom(host) -i ou-alpha
        acl is_backend2 hdr_dom(host) -i ou-alpha-history
        acl is_backend4 hdr_dom(host) -i ou-test
        acl is_backend4 hdr_dom(host) -i ou-test-history
        acl is_backend0 hdr_dom(host) -i personalleadership
        acl is_backend3 hdr_dom(host) -i platform
        acl is_backend0 hdr_dom(host) -i prmia
        acl is_backend2 hdr_dom(host) -i prmia-alpha
        acl is_backend0 hdr_dom(host) -i rwanda
        acl is_backend2 hdr_dom(host) -i rwanda-alpha
        acl is_backend0 hdr_dom(host) -i symmys
        acl is_backend2 hdr_dom(host) -i symmys-alpha
        acl is_backend1 hdr_dom(host) -i testmathcounts
        acl is_backend2 hdr_dom(host) -i testprmia
        acl is_backend0 hdr_dom(host) -i utsa
        acl is_backend2 hdr_dom(host) -i utsa-alpha
        acl is_backend6 hdr_dom(host) -i wiley
        acl is_backend2 hdr_dom(host) -i wiley-alpha

# symmys wants their custom favicon. This was the most expedient way to do it -cutz 8/13/2014
haproxy_extra_config =
    acl is_symmys hdr_dom(host) -i symmys
        acl is_symmys hdr_dom(host) -i symmys-alpha
        acl is_symmys hdr_dom(host) -i lab
        acl is_symmys hdr_dom(host) -i labs
        reqrep ^([^\ :]*)\ .*/favicon\.ico \1\ /app/resources/images/symmys.nextthought.com/symmys_favicon.ico if is_symmys

        acl is_symmys_down hdr_dom(host) -i lab
        acl is_symmys_down hdr_dom(host) -i labs
        acl is_symmys_down_app url_beg -i /app
        acl is_symmys_down_login url_reg -i /login$
        acl is_symmys_down_login url_reg -i /login/$
        reqrep ^([^\ :]*)\ .*/*\.html \1\ /login/symmys-down.html if is_symmys_down
        reqrep ^([^\ :]*)\ .*/login/*\.html \1\ /login/symmys-down.html if is_symmys_down
        reqrep ^([^\ :]*)\ .*/symmys_arpm_logo\.jpg \1\ /login/resources/images/symmys_arpm_logo.jpg if is_symmys_down

haproxy_extra_redirects =
    redirect location / if is_symmys_down_app is_symmys_down
        redirect location / if is_symmys_down_login is_symmys_down

# Define the destination port for each backend
haproxy_app_backend0_port = 20006
haproxy_app_backend1_port = 20016
haproxy_app_backend2_port = 20026
haproxy_app_backend3_port = 20036
haproxy_app_backend4_port = 20046
haproxy_app_backend5_port = 20056
haproxy_app_backend6_port = 20066
haproxy_app_backend6_port = 20070

aux1_ip = 10.50.0.50
ds1_ip = 10.50.0.100
ds2_ip = 10.50.0.101
ds3_ip = 10.50.8.102
ds4_ip = 10.50.8.103

# Define the servers for each backend
haproxy_app_backend0 =
    server app100 ${:ds1_ip}:${:haproxy_app_backend0_port} weight 1 on-error mark-down check inter 2000 rise 2 fall 2 observe layer7 send-proxy
        server app101 ${:ds2_ip}:${:haproxy_app_backend0_port} weight 1 on-error mark-down check inter 2000 rise 2 fall 2 observe layer7 send-proxy
        server app102 ${:ds3_ip}:${:haproxy_app_backend0_port} weight 1 on-error mark-down check inter 2000 rise 2 fall 2 observe layer7 send-proxy
        server app103 ${:ds4_ip}:${:haproxy_app_backend0_port} weight 1 on-error mark-down check inter 2000 rise 2 fall 2 observe layer7 send-proxy

haproxy_app_backend1 =
    server app100 ${:ds1_ip}:${:haproxy_app_backend1_port} weight 1 on-error mark-down check inter 2000 rise 2 fall 2 observe layer7 send-proxy
        server app101 ${:ds2_ip}:${:haproxy_app_backend1_port} weight 1 on-error mark-down check inter 2000 rise 2 fall 2 observe layer7 send-proxy
        server app102 ${:ds3_ip}:${:haproxy_app_backend1_port} weight 1 on-error mark-down check inter 2000 rise 2 fall 2 observe layer7 send-proxy
        server app103 ${:ds4_ip}:${:haproxy_app_backend1_port} weight 1 on-error mark-down check inter 2000 rise 2 fall 2 observe layer7 send-proxy

haproxy_app_backend2 =
    server app50 ${:aux1_ip}:${:haproxy_app_backend2_port} weight 1 on-error mark-down check inter 2000 rise 2 fall 2 observe layer7 send-proxy

haproxy_app_backend3 =
    server app100 ${:ds1_ip}:${:haproxy_app_backend3_port} weight 1 on-error mark-down check inter 2000 rise 2 fall 2 observe layer7 send-proxy
        server app101 ${:ds2_ip}:${:haproxy_app_backend3_port} weight 1 on-error mark-down check inter 2000 rise 2 fall 2 observe layer7 send-proxy
        server app102 ${:ds3_ip}:${:haproxy_app_backend3_port} weight 1 on-error mark-down check inter 2000 rise 2 fall 2 observe layer7 send-proxy
        server app103 ${:ds4_ip}:${:haproxy_app_backend3_port} weight 1 on-error mark-down check inter 2000 rise 2 fall 2 observe layer7 send-proxy

haproxy_app_backend4 =
    server app50 ${:aux1_ip}:${:haproxy_app_backend4_port} weight 1 on-error mark-down check inter 2000 rise 2 fall 2 observe layer7 send-proxy

haproxy_app_backend5 =
    server app50 ${:aux1_ip}:${:haproxy_app_backend5_port} weight 1 on-error mark-down check inter 2000 rise 2 fall 2 observe layer7 send-proxy

haproxy_app_backend6 =
    server app102 ${:ds3_ip}:${:haproxy_app_backend6_port} weight 1 on-error mark-down check inter 2000 rise 2 fall 2 observe layer7 send-proxy

haproxy_app_backend7 =
    server app50 ${:aux1_ip}:${:haproxy_app_backend7_port} weight 1 on-error mark-down check inter 2000 rise 2 fall 2 observe layer7

# HAproxy stats on a unix socket. See
# http://cbonte.github.io/haproxy-dconv/configuration-1.5.html#9.2
haproxy_stats_socket = ${deployment:run-directory}/haproxy-tier1.sock
haproxy_priviledged_stats_socket = ${deployment:run-directory}/haproxy-tier1-priviledged.sock
# TODO: There are recipes that enumerate other sections; we
# probably want to use those here to avoid having to
# manually list out all server ips again. Alternatively,
# our own meta recipe.

[supervisor]
# Disable supervisord based log rotation because we have switched to using logrotate
logfile-maxbytes = 0
childstdout-logfile-maxbytes = 0
childstderr-logfile-maxbytes = 0
# Don't wipe away existing logs
nocleanup = True
programs +=
		1 haproxy ${deployment:bin-directory}/haproxy [-f ${deployment:etc-directory}/haproxy/haproxy-tier1.cfg -db]
		1 haproxy-priv ${deployment:bin-directory}/haproxy [-f ${deployment:etc-directory}/haproxy/haproxy-tier1-priviledged.cfg -db]
		2 stunnel-nextthought ${deployment:bin-directory}/stunnel [${deployment:etc-directory}/stunnel/stunnel-STAR_nextthought_com.conf]
		2 stunnel-nextthought-alpha ${deployment:bin-directory}/stunnel [${deployment:etc-directory}/stunnel/stunnel-alpha_nextthought_com.conf]
		2 stunnel-janux ${deployment:bin-directory}/stunnel [${deployment:etc-directory}/stunnel/stunnel-janux_ou_edu.conf]
		2 stunnel-symmys ${deployment:bin-directory}/stunnel [${deployment:etc-directory}/stunnel/stunnel-STAR_symmys_com.conf]
