[buildout]
extends = 
    deployment.cfg
    pycrypto.cfg
    mysql.cfg
    supervisor.cfg

parts +=
    backup-scripts
    log-backup-scripts
    eggs
    libgmp
    mysql
    passwords
    pycrypto
    supervisor
    backup-alpha
    backup-outest

# Using 'true' causes issues with file templates and extra Z3C_RECIPE_FILETEMPLATE_BASE
# not being interpreted
relative-paths = false

# By default, buildout checks for
# updated eggs when the requirements
# specify no version or >=. This can
# be fairly slow if most requirements are
# unpinned. Setting newest to false
# makes this not happen. The command line
# arg -n can make it happen again
newest = false

# We manage our checkouts using mr.developer, which
# easily allows pinning versions (revision=XXX)
# and provides the 'develop' command with many
# useful actions (like 'rebuild)
# See https://pypi.python.org/pypi/mr.developer/
extensions = mr.developer
mr.developer-threads = 35
sources-dir = sources
auto-checkout = *
# always-checkout =
# This defaults to false. If it's true, then all packages specified by
# auto-checkout and currently in develop mode are updated during each
# buildout run. If set to force, then packages are updated even when
# they are dirty instead of asking interactively.

[eggs]
recipe = zc.recipe.egg
eggs =
    boto
    filechunkio
    pycrypto
interpreter = python
# Note that when scripts are installed,
# the order is not knowable. Thus it is not
# possible for one egg to reliable override
# a script from another egg, without
# explicitly listing exactly which scripts (from all
# eggs) to install. That is a large list, so
# we just need to make sure we don't have conflicts
# in names.
dependent-scripts = true

[sources]
nti.recipes.passwords = svn https://repos.nextthought.com/svn/nti-svn/nti.recipes.passwords/trunk
nti.recipes.zcml = svn https://repos.nextthought.com/svn/nti-svn/nti.recipes.zcml/trunk

[passwords]
recipe = nti.recipes.passwords
file = backup_passwords.pass.cast5

[boto]
aws_access_key_id = ***REMOVED***
aws_secret_access_key = ${passwords:aws_secret_access_key}

[backupvars]
backup_user = backup
backup_bucket = backups.nextthought.com
backup_ssh_key = /home/ntibackup/.ssh/backups
remote_log_dir = ~/buildout/var/log

# Database ports
alpha_db_port = 20024
janux_db_port = 20034
outest_db_port = 20044
okstate_db_port = 20094

# Database addresses
aux1-address = 10.50.2.50
db1-address = 10.50.2.200
db2-address = 10.50.2.201
db3-address = 10.50.10.202
db4-address = 10.50.10.203

aux1 = aux1-ou.internal.nextthought.com
db1 = db1-ou.internal.nextthought.com
db2 = db2-ou.internal.nextthought.com
db3 = db3-ou.internal.nextthought.com
db4 = db4-ou.internal.nextthought.com

backup_base_dir = /srv/backups
db_backup_dir = ${:backup_base_dir}/db
backup_cache_dir = /srv/backups2/tmp
alpha_db_dir = ${:db_backup_dir}/alpha
alpha_binlogs_dir = ${:alpha_db_dir}/binary-logs
janux_db_dir = ${:db_backup_dir}/janux
janux_binlogs_dir = ${:janux_db_dir}/binary-logs
okstate_db_dir = ${:db_backup_dir}/okstate
okstate_binlogs_dir = ${:okstate_db_dir}/binary-logs
outest_db_dir = ${:db_backup_dir}/outest
outest_binlogs_dir = ${:outest_db_dir}/binary-logs

log_backup_dir = ${:backup_base_dir}/logs

[backup-scripts]
recipe = z3c.recipe.filetemplate
source-directory = templates
dest-directory = ${deployment:root-directory}
files = get_binary_logs backupdb db-backup-config.json my2-backup.cnf my3-backup.cnf my4-backup.cnf my9-backup.cnf

[log-backup-scripts]
recipe = z3c.recipe.filetemplate
source-directory = templates
dest-directory = ${deployment:root-directory}
files = logfetch logfetch-config.json

[backup-alpha]
recipe = z3c.recipe.usercrontab
times = 0 0 * * *
command = ${deployment:bin-directory}/backupdb -c ${deployment:etc-directory}/db-backup-config.json --temp-dir ${backupvars:backup_cache_dir} --backup-dir ${backupvars:db_backup_dir} -e alpha

[backup-janux]
recipe = z3c.recipe.usercrontab
times = 0 0 * * *
command = ${deployment:bin-directory}/backupdb -c ${deployment:etc-directory}/db-backup-config.json --temp-dir ${backupvars:backup_cache_dir} --backup-dir ${backupvars:db_backup_dir} -e janux

[backup-okstate]
recipe = z3c.recipe.usercrontab
times = 0 0 * * *
command = ${deployment:bin-directory}/backupdb -c ${deployment:etc-directory}/db-backup-config.json --temp-dir ${backupvars:backup_cache_dir} --backup-dir ${backupvars:db_backup_dir} -e okstate

[backup-outest]
recipe = z3c.recipe.usercrontab
times = 0 0 * * *
command = ${deployment:bin-directory}/backupdb -c ${deployment:etc-directory}/db-backup-config.json --temp-dir ${backupvars:backup_cache_dir} --backup-dir ${backupvars:db_backup_dir} -e outest

[logfetch-alpha]
recipe = z3c.recipe.usercrontab
times = 0 0 * * *
command = ${deployment:bin-directory}/logfetch -c ${deployment:etc-directory}/logfetch-config.json --backup-dir ${backupvars:log_backup_dir} -e alpha

[logfetch-janux]
recipe = z3c.recipe.usercrontab
times = 0 0 * * *
command = ${deployment:bin-directory}/logfetch -c ${deployment:etc-directory}/logfetch-config.json --backup-dir ${backupvars:log_backup_dir} -e janux

[logfetch-okstate]
recipe = z3c.recipe.usercrontab
times = 0 0 * * *
command = ${deployment:bin-directory}/logfetch -c ${deployment:etc-directory}/logfetch-config.json --backup-dir ${backupvars:log_backup_dir} -e okstate

[logfetch-outest]
recipe = z3c.recipe.usercrontab
times = 0 0 * * *
command = ${deployment:bin-directory}/logfetch -c ${deployment:etc-directory}/logfetch-config.json --backup-dir ${backupvars:log_backup_dir} -e outest

[supervisor]
# Disable supervisord based log rotation because we have switched to using logrotate
logfile-maxbytes = 0
childstdout-logfile-maxbytes = 0
childstderr-logfile-maxbytes = 0
# Don't wipe away existing logs
nocleanup = True
programs =
    1 alpha-aux1-mysql-binlog ${deployment:bin-directory}/get_binary_logs [${deployment:etc-directory}/mysql/my2-backup.cnf ${backupvars:aux1-address} ${backupvars:alpha_binlogs_dir}/${backupvars:aux1}/]
    1 janux-db1-mysql-binlog ${deployment:bin-directory}/get_binary_logs [${deployment:etc-directory}/mysql/my3-backup.cnf ${backupvars:db1-address} ${backupvars:janux_binlogs_dir}/${backupvars:db1}/]
    1 janux-db2-mysql-binlog ${deployment:bin-directory}/get_binary_logs [${deployment:etc-directory}/mysql/my3-backup.cnf ${backupvars:db2-address} ${backupvars:janux_binlogs_dir}/${backupvars:db2}/]
    1 outest-aux1-mysql-binlog ${deployment:bin-directory}/get_binary_logs [${deployment:etc-directory}/mysql/my4-backup.cnf ${backupvars:aux1-address} ${backupvars:outest_binlogs_dir}/${backupvars:aux1}/]
    1 okstate-db3-mysql-binlog ${deployment:bin-directory}/get_binary_logs [${deployment:etc-directory}/mysql/my9-backup.cnf ${backupvars:db3-address} ${backupvars:okstate_binlogs_dir}/${backupvars:db3}/]
    1 okstate-db4-mysql-binlog ${deployment:bin-directory}/get_binary_logs [${deployment:etc-directory}/mysql/my9-backup.cnf ${backupvars:db4-address} ${backupvars:okstate_binlogs_dir}/${backupvars:db4}/]

