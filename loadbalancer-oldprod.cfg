[buildout]
extends = 
        tier1.cfg
        haproxy.cfg

parts +=
        haproxy
        haproxy-blocked-conf
        haproxy-tier1-conf
        supervisor

# We manage our checkouts using mr.developer, which
# easily allows pinning versions (revision=XXX)
# and provides the 'develop' command with many
# useful actions (like 'rebuild)
# See https://pypi.python.org/pypi/mr.developer/
extensions = mr.developer
mr.developer-threads = 35
sources-dir = sources
auto-checkout = *

[sources]
collective.recipe.supervisor = git https://github.com/NextThought/collective.recipe.supervisor.git

[haproxy-tier1-conf]
haproxy_ssl_binds = 
    bind 156.110.241.10:443 ssl crt /opt/nti/ssl_certs/janux_ou_edu_2015_gary.pem
        bind 156.110.241.11:443 ssl crt /opt/nti/ssl_certs/janux_ou_edu_2015_gary.pem
        bind 156.110.241.12:443 ssl crt /opt/nti/ssl_certs/STAR_nextthought_com_2016.pem crt /opt/nti/ssl_certs/janux_ou_edu_2015_gary.pem crt /opt/nti/ssl_certs/learnonline_okstate_edu_2015.pem crt /opt/nti/ssl_certs/STAR_symmys_com_2015.pem
        bind 156.110.241.13:443 ssl crt /opt/nti/ssl_certs/STAR_nextthought_com_2016.pem crt /opt/nti/ssl_certs/janux_ou_edu_2015_gary.pem crt /opt/nti/ssl_certs/learnonline_okstate_edu_2015.pem crt /opt/nti/ssl_certs/STAR_symmys_com_2015.pem
        bind 156.110.241.14:443 ssl crt /opt/nti/ssl_certs/STAR_nextthought_com_2016.pem crt /opt/nti/ssl_certs/janux_ou_edu_2015_gary.pem crt /opt/nti/ssl_certs/learnonline_okstate_edu_2015.pem crt /opt/nti/ssl_certs/STAR_symmys_com_2015.pem
        bind 156.110.241.15:443 ssl crt /opt/nti/ssl_certs/STAR_nextthought_com_2016.pem crt /opt/nti/ssl_certs/janux_ou_edu_2015_gary.pem crt /opt/nti/ssl_certs/learnonline_okstate_edu_2015.pem crt /opt/nti/ssl_certs/STAR_symmys_com_2015.pem
        bind 156.110.241.16:443 ssl crt /opt/nti/ssl_certs/STAR_nextthought_com_2016.pem crt /opt/nti/ssl_certs/janux_ou_edu_2015_gary.pem crt /opt/nti/ssl_certs/learnonline_okstate_edu_2015.pem crt /opt/nti/ssl_certs/STAR_symmys_com_2015.pem
        bind 156.110.241.17:443 ssl crt /opt/nti/ssl_certs/STAR_nextthought_com_2016.pem crt /opt/nti/ssl_certs/janux_ou_edu_2015_gary.pem crt /opt/nti/ssl_certs/learnonline_okstate_edu_2015.pem crt /opt/nti/ssl_certs/STAR_symmys_com_2015.pem
        bind 156.110.241.18:443 ssl crt /opt/nti/ssl_certs/STAR_nextthought_com_2016.pem crt /opt/nti/ssl_certs/janux_ou_edu_2015_gary.pem crt /opt/nti/ssl_certs/learnonline_okstate_edu_2015.pem crt /opt/nti/ssl_certs/STAR_symmys_com_2015.pem
        bind 156.110.241.19:443 ssl crt /opt/nti/ssl_certs/STAR_nextthought_com_2016.pem crt /opt/nti/ssl_certs/janux_ou_edu_2015_gary.pem crt /opt/nti/ssl_certs/learnonline_okstate_edu_2015.pem crt /opt/nti/ssl_certs/STAR_symmys_com_2015.pem

haproxy_extra_config =
    # For BWC have the robots and google verification logic here
        acl robots url_sub -i robots.txt robots-dev.txt
        acl google_verification url_beg /google

haproxy_extra_redirects =
    use_backend s3_backend if robots
        use_backend s3_backend if google_verification

# Define the destination port for each backend
haproxy_app_backend0_port = 20006
haproxy_app_backend1_port = 20016
haproxy_app_backend6_port = 20066
haproxy_app_backend8_port = 20086
haproxy_app_backend9_port = 20096

ds3_ip = 10.50.8.102
ds4_ip = 10.50.8.103
aux1_ip = 10.50.0.50

haproxy_jira_backend =
    server jira 10.50.42.41:8080 weight 1 on-error mark-down check inter 2000 rise 2 fall 2 observe layer7

haproxy_npm_backend =
    server npm 10.50.4.41:4873 weight 1 on-error mark-down check inter 2000 rise 2 fall 2 observe layer7

haproxy_splunk_backend =
    server splunk ${:aux1_ip}:8000 weight 1 on-error mark-down check inter 2000 rise 2 fall 2 observe layer7

haproxy_static_hosting_backend =
    balance source
        server ds2 10.50.0.101:8081 weight 1 on-error mark-down check inter 2000 rise 2 fall 2 observe layer7 send-proxy
        server ds3 10.50.8.102:8081 weight 1 on-error mark-down check inter 2000 rise 2 fall 2 observe layer7 send-proxy

haproxy_tier2_backend0 =
    balance source
        option httpchk GET /_ops/ping HTTP/1.1
        server app102 ${:ds3_ip}:${:haproxy_app_backend0_port} weight 1 on-error mark-down check inter 2000 rise 2 fall 2 observe layer7 send-proxy
        server app103 ${:ds4_ip}:${:haproxy_app_backend0_port} weight 1 on-error mark-down check inter 2000 rise 2 fall 2 observe layer7 send-proxy

haproxy_tier2_backend1 =
    balance source
        option httpchk GET /_ops/ping HTTP/1.1
        server app102 ${:ds3_ip}:${:haproxy_app_backend1_port} weight 1 on-error mark-down check inter 2000 rise 2 fall 2 observe layer7
        server app103 ${:ds4_ip}:${:haproxy_app_backend1_port} weight 1 on-error mark-down check inter 2000 rise 2 fall 2 observe layer7

haproxy_tier2_backend3 =
    balance source
        server ds2 10.50.0.101:8081 weight 1 on-error mark-down check inter 2000 rise 2 fall 2 observe layer7 send-proxy
        server ds3 10.50.8.102:8081 weight 1 on-error mark-down check inter 2000 rise 2 fall 2 observe layer7 send-proxy

haproxy_tier2_backend6 =
    balance source
        option httpchk GET /_ops/ping HTTP/1.1
        server app103 ${:ds4_ip}:${:haproxy_app_backend6_port} weight 1 on-error mark-down check inter 2000 rise 2 fall 2 observe layer7 send-proxy

haproxy_tier2_backend8 =
    balance source
        option httpchk GET /_ops/ping HTTP/1.1
        server app102 ${:ds3_ip}:${:haproxy_app_backend8_port} weight 1 on-error mark-down check inter 2000 rise 2 fall 2 observe layer7 send-proxy

haproxy_tier2_backend9 =
    balance source
        option httpchk GET /_ops/ping HTTP/1.1
        server app102 ${:ds3_ip}:${:haproxy_app_backend9_port} weight 1 on-error mark-down check inter 2000 rise 2 fall 2 observe layer7 send-proxy
        server app103 ${:ds4_ip}:${:haproxy_app_backend9_port} weight 1 on-error mark-down check inter 2000 rise 2 fall 2 observe layer7 send-proxy

[supervisor]
recipe = collective.recipe.supervisor
plugins =
		mr.laforge
# mr.laforge allows us to say 'supervisorctl kill HUP nginx' https://pypi.python.org/pypi/mr.laforge/0.6
d_plugins = mr.laforge
ctl_plugins = mr.laforge
rpcplugins = laforge mr.laforge.rpcinterface:make_laforge_rpcinterface
ctlplugins = laforge mr.laforge.controllerplugin:make_laforge_controllerplugin

supervisord-conf = ${deployment:etc-directory}/supervisord.conf
http-socket = unix
file = ${deployment:run-directory}/supervisord.sock
serverurl = unix:///${:file}
childlogdir = ${deployment:log-directory}
logfile = ${deployment:log-directory}/supervisord.log
pidfile = ${deployment:run-directory}/supervisord.pid
loglevel = info

programs =
		 999 tier-1 (autostart=false) ${deployment:bin-directory}/haproxy-systemd-wrapper [-f ${deployment:etc-directory}/haproxy/haproxy-tier1.cfg -p ${haproxy-tier1-conf:pidfile}]
