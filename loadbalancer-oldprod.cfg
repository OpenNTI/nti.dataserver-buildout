[buildout]
extends = 
        tier1.cfg
        haproxy.cfg
        stunnel.cfg

parts +=
        haproxy
        stunnel
        haproxy-tier1-conf

[haproxy-tier1-conf]
haproxy_stats_socket = /var/run/haproxy-stats.sock
ssl_socket_owner = root
haproxy_ssl_socket = /var/run/ssl-frontend-STAR_nextthought_com.sock

haproxy_ssl_binds = 

haproxy_extra_config =
    # Handle the case of multiple stunnels
        bind /var/run/ssl-frontend-ou.sock user root mode 600 id 43 accept-proxy
        bind /var/run/ssl-frontend-STAR_symmys_com.sock user root mode 600 id 44 accept-proxy

        # For BWC have the robots and google verification logic here
        acl robots url_sub -i robots.txt robots-dev.txt
        acl google_verification url_beg /google

        # Since stunnel is terminating SSL we have to match on bind id and
        # inform the backends that the connection came in over SSL.
        acl is_ssl so_id 42
        acl is_ssl so_id 43
        acl is_ssl so_id 44

        #symmys wants their custom favicon. This was the most expedient way to do it -cutz 8/13/2014
        acl is_symmys hdr_dom(host) -i symmys
        acl is_symmys hdr_dom(host) -i lab
        acl is_symmys hdr_dom(host) -i labs
        reqrep ^([^\ :]*)\ .*/favicon\.ico \1\ /app/resources/images/symmys.nextthought.com/symmys_favicon.ico if is_symmys

        acl is_symmys_down hdr_dom(host) -i lab
        acl is_symmys_down hdr_dom(host) -i labs
        reqrep ^([^\ :]*)\ .*/*\.html \1\ /login/symmys-down.html if is_symmys_down
        reqrep ^([^\ :]*)\ .*/login/*\.html \1\ /login/symmys-down.html if is_symmys_down
        reqrep ^([^\ :]*)\ .*/symmys_arpm_logo\.jpg \1\ /login/resources/images/symmys_arpm_logo.jpg if is_symmys_down

        #OKState has a custom favicon.
        acl is_okstate hdr_dom(host) -i learnonline
        acl is_okstate hdr_dom(host) -i okstate
        acl is_okstate hdr_dom(host) -i okstate-alpha
        acl is_okstate hdr_dom(host) -i okstate-test
        reqrep ^([^\ :]*)\ .*/favicon\.ico \1\ /app/resources/images/okstate.nextthought.com/osu-favicon.ico if is_okstate

        # Let gunicorn/nginx know if we are dealing with an incoming HTTPS request
        # (This is a default 'secure-header' in gunicorns conf)
        reqidel ^X-FORWARDED-PROTOCOL:.*
        reqadd X-FORWARDED-PROTOCOL:\ ssl if is_ssl

haproxy_extra_redirects =
    # Redirects for SYMMYS's "down page"
        acl is_symmys_down_app url_beg -i /app
        acl is_symmys_down_login url_reg -i /login$
        acl is_symmys_down_login url_reg -i /login/$
        redirect location / if is_symmys_down_app is_symmys_down
        redirect location / if is_symmys_down_login is_symmys_down

        use_backend s3_backend if robots
        use_backend s3_backend if google_verification

# Define the destination port for each backend
haproxy_app_backend0_port = 20006
haproxy_app_backend1_port = 20016
haproxy_app_backend6_port = 20066
haproxy_app_backend9_port = 20096

ds3_ip = 10.50.8.102
ds4_ip = 10.50.8.103

haproxy_tier2_backend0 =
    balance source
        option httpchk GET /_ops/ping HTTP/1.1
        server app102 ${:ds3_ip}:${:haproxy_app_backend0_port} weight 1 on-error mark-down check inter 2000 rise 2 fall 2 observe layer7 send-proxy
        server app103 ${:ds4_ip}:${:haproxy_app_backend0_port} weight 1 on-error mark-down check inter 2000 rise 2 fall 2 observe layer7 send-proxy

haproxy_tier2_backend1 =
    balance source
        option httpchk GET /_ops/ping HTTP/1.1
        server app102 ${:ds3_ip}:${:haproxy_app_backend1_port} weight 1 on-error mark-down check inter 2000 rise 2 fall 2 observe layer7
        server app103 ${:ds4_ip}:${:haproxy_app_backend1_port} weight 1 on-error mark-down check inter 2000 rise 2 fall 2 observe layer7

haproxy_tier2_backend6 =
    balance source
        option httpchk GET /_ops/ping HTTP/1.1
        server app102 ${:ds3_ip}:${:haproxy_app_backend6_port} weight 1 on-error mark-down check inter 2000 rise 2 fall 2 observe layer7 send-proxy

haproxy_tier2_backend9 =
    balance source
        option httpchk GET /_ops/ping HTTP/1.1
        server app102 ${:ds3_ip}:${:haproxy_app_backend9_port} weight 1 on-error mark-down check inter 2000 rise 2 fall 2 observe layer7 send-proxy
        server app103 ${:ds4_ip}:${:haproxy_app_backend9_port} weight 1 on-error mark-down check inter 2000 rise 2 fall 2 observe layer7 send-proxy

