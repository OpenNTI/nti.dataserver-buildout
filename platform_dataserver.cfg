[buildout]
extends =
		environment.cfg
		logrotate.cfg
		prometheus.cfg
		nginx.cfg
		relstorage_environment.cfg
		analytics.cfg
		sites.cfg
		solr.cfg
		credit.cfg
		calendar.cfg
		contentrendering.cfg
		courseware_content.cfg
		invitations.cfg
		presentation.cfg
		nltk.cfg

always-checkout = true
# NOTE: When extending multiple base configs,
# only the parts from the bottom config are
# installed by default (even if they all use 'parts +=').
# So if we want to install parts from both configs,
# we need to explicitly list them.
parts =
	logrotate-conf
	logrotate-cron
	node_exporter
	statsd_exporter
	on-site-logs-cron
	off-site-logs-cron
	cython
	lxml
	pillow
	eggs
	checkversions
	passwords
	directories
	zcml
	main-conf
	pserve-conf
	gunicorn-conf
	library-conf
	clean-pyc
	roles
	supervisor
	nginx-conf
	relstorages
	qp-cron
	solr-conf
	phantomjs
	imagemagick
	nltk
	nltk_data

[product-sources]
<=	product-courses-sources
	product-integration-ALL-sources

[solr-sources]
<= solr-ALL-sources

[completion-sources]
<= completion-ALL-sources

[credit-sources]
<= credit-ALL-sources

[calendar-sources]
<= calendar-ALL-sources

[courseware-ALL-sources]
<=  invitations-ALL-sources
	presentation-ALL-sources
	courseware-content-ALL-sources

[logrotate-cron]
logrotate-bin = /usr/sbin/logrotate

[on-site-logs-cron]
recipe = z3c.recipe.usercrontab
rsync-bin = /usr/bin/rsync
times = 5,20,35,50 * * * *
command = ${:rsync-bin} --numeric-ids -a "${deployment:log-directory}/" "logger1.nti::logs/$HOSTNAME/"

[off-site-logs-cron]
recipe = z3c.recipe.usercrontab
rsync-bin = /usr/bin/rsync
times = 10,25,40,55 * * * *
command = ${:rsync-bin} --numeric-ids -a "${deployment:log-directory}/" "10.50.30.64::logs/$HOSTNAME/"

[zcml]
package_features += no_avatar
	 				production_env

[eggs]
eggs +=
	${analytics-ALL-eggs:eggs}
	${assessment-ALL-eggs:eggs}
	${badges-ALL-eggs:eggs}
	${completion-ALL-eggs:eggs}
	${contentrendering-MAIN-eggs:eggs}
	${courseware-content-ALL-eggs:eggs}
	${credit-ALL-eggs:eggs}
	${calendar-ALL-eggs:eggs}
	${invitations-ALL-eggs:eggs}
	${presentation-ALL-eggs:eggs}
	${product-courses-eggs:eggs}
	${solr-ALL-eggs:eggs}

[server-versions]
All = @131250
sites = @131250
server = rev=errorsmith
dataserver = ${server-versions:server}
geventwebsocket = ${server-versions:server}

[site-versions]
accenture-rwi = ${server-versions:server}
alpha = ${server-versions:server}
apple-rwi = ${server-versions:server}
arcbest = ${server-versions:server}
associationlearning = ${server-versions:server}
bancfirst = ${server-versions:server}
bellwetherenterprise = ${server-versions:server}
careoklahoma = ${server-versions:server}
chegg = ${server-versions:server}
complyu = ${server-versions:server}
dta = ${server-versions:server}
ensync = ${server-versions:server}
epiccharterschools = ${server-versions:server}
esteem = ${server-versions:server}
gammaphibeta = ${server-versions:server}
ifsta = rev=errorsmith.3
iiaok = ${server-versions:server}
lawokcu = ${server-versions:server}
macsw = ${server-versions:server}
mygov = ${server-versions:server}
nahb = ${server-versions:server}
nrwa = ${server-versions:server}
odapca = ${server-versions:server}
onenet = ${server-versions:server}
opsrc = ${server-versions:server}
osde = ${server-versions:server}
pairin = rev=errorsmith.1
pdca = ${server-versions:server}
prmia = ${server-versions:server}
proximity = ${server-versions:server}
rdn1 = ${server-versions:server}
rntpros = ${server-versions:server}
rwi = ${server-versions:server}
sallt = ${server-versions:server}
smarttech = ${server-versions:server}
strata = rev=errorsmith.1
thelanguagecompany = ${server-versions:server}
xyzuniversity = ${server-versions:server}

[analytics-versions]
analytics = ${server-versions:server}
app.analytics = ${server-versions:server}
app.learning_network = ${server-versions:server}
app.registration = ${server-versions:server}
database = ${server-versions:server}
learning_network = ${server-versions:server}
registration = ${server-versions:server}

[assessment-versions]
app_assessment = ${server-versions:server}
assessment = ${server-versions:server}
openmath = ${server-versions:server}
plasTeX = ${server-versions:server}

[async-versions]
async = ${server-versions:server}
app_async = ${server-versions:server}

[ats-versions]
imis = ${server-versions:server}

[badges-versions]
app.badges = ${server-versions:server}
badges = ${server-versions:server}
tahrir = ${server-versions:server}

[base-versions]
base = ${server-versions:server}
common = ${server-versions:server}
containers = ${server-versions:server}
contentindexing = ${server-versions:server}
contentprocessing = ${server-versions:server}
coremetadata = ${server-versions:server}
datastructures = ${server-versions:server}
dublincore = ${server-versions:server}
intid = ${server-versions:server}
futures = ${server-versions:server}
mimetype = ${server-versions:server}
namedfile = ${server-versions:server}
ntiids = ${server-versions:server}
plone.namedfile = ${server-versions:server}
threadable = ${server-versions:server}

[completion-versions]
app_completion = ${server-versions:server}
completion = ${server-versions:server}

[contentlibrary_rendering-versions]
app.contentlibrary_rendering = ${server-versions:server}
contentlibrary_rendering = ${server-versions:server}

[courseware-versions]
admin = ${server-versions:server}
scorm = ${server-versions:server}
store = ${server-versions:server}
badges = ${server-versions:server}
content = ${server-versions:server}
courses = ${server-versions:server}
reports = rev=errorsmith.2
courseware = rev=errorsmith.2
scorm_cloud = ${server-versions:server}

[credit-versions]
app_credit = ${server-versions:server}
credit = ${server-versions:server}

[calendar-versions]
app_calendar = ${server-versions:server}
calendar = ${server-versions:server}

[dataserver-base-versions]
app.client_preferences = ${server-versions:server}
app.pyramid_zope = ${server-versions:server}
app.site = ${server-versions:server}
dataserver = rev=errorsmith.1
identifiers = ${server-versions:server}
links = ${server-versions:server}
monkey = ${server-versions:server}
traversal = ${server-versions:server}
utils = ${server-versions:server}

[ensync-versions]
app_ensync = ${server-versions:server}

[ims-versions]
app_ims = ${server-versions:server}
courseware_ims = ${server-versions:server}
ims = ${server-versions:server}

[invitations-versions]
invitations = ${server-versions:server}
app_invitations = ${server-versions:server}

[library-versions]
app_reports = ${server-versions:server}

[messaging-versions]
app_messaging = ${server-versions:server}
messaging = ${server-versions:server}

[metadata-versions]
metadata = ${server-versions:server}
app_metadata = ${server-versions:server}

[presentation-versions]
app.presentation = ${server-versions:server}
preferences = ${server-versions:server}
presentation = ${server-versions:server}

[product-versions]
ou = ${server-versions:server}
gradebook = ${server-versions:server}

[product-integration-versions]
integration = ${server-versions:server}
webinar = ${server-versions:server}
yourmembership = ${server-versions:server}

[publishing-versions]
app_publishing = ${server-versions:server}
publishing = ${server-versions:server}

[recipe-versions]
json = ${server-versions:server}
passwords = ${server-versions:server}
zodb = ${server-versions:server}

[recorder-versions]
app_recorder = ${server-versions:server}
recorder = ${server-versions:server}

[rendering-versions]
rendering = ${server-versions:server}
assessment = ${server-versions:server}
tools = ${server-versions:server}
content-deployment = ${server-versions:server}

[reports-versions]
app_reports = ${server-versions:server}
reports = ${server-versions:server}

[solr-versions]
app.solr = ${server-versions:server}
solr = ${server-versions:server}

[store-versions]
app.store = ${server-versions:server}
contentlibrary_store = ${server-versions:server}
store = ${server-versions:server}

[MySQL-python]
environment =
rpath =
library-dirs = /usr/lib
include-dirs = /usr/include

[relstorages]
shared-blob-dir = false
storages = Users
enable-persistent-cache = true
cache-local-mb = 300
cache-local-dir-count = 16

[relstorages_opts]
sql_adapter_extra_args =
					port 3306
					driver umysqldb

[relstorages_users_storage_opts]
sql_passwd = ${passwords:relstorage_user_passwd}

[environment]
sql_user = ntiuser
cache_servers =
smtp_server = email-smtp.us-east-1.amazonaws.com

### StatsD
statsd_port = 9125
statsd_prefix = 'pserve'

[nginx-conf]
recipe = z3c.recipe.filetemplate
source-directory = templates
dest-directory = ${deployment:root-directory}
# the main conf file is already installed
# as part of building nginx, we must overwrite it
force-overwrite = true
files = nginx.conf fastcgi.conf fastcgi_params koi-utf koi-win mime.types scgi_params uwsgi_params win-utf dataserver_caching.conf

# Core Settings
nginx_daemon = off
nginx_user = ntiuser
nginx_workers = 9
aio = aio on;

# Logging knobs
nginx_access_log = /dev/stdout
nginx_access_log_options = main buffer=4k flush=1m
nginx_error_log = /dev/stderr
nginx_error_log_level = warn

# PID file
nginx_pidfile = ${deployment:run-directory}/nginx.pid

# How many files to keep in the open cache. This should be
# at least 60K in production (smaller in dev where ulimits
# are usually not set up)
nginx_max_open_files = 60000

# Cache options
global_host_name = ""
global_content_directory = ${buildout:directory}/../DataserverGlobalLibrary
hosted_badge_images_directory = ${environment:hosted_badge_images_directory}
hosted_badge_images_location = ${environment:hosted_badge_images_location}
nginx_ip = 0.0.0.0
nginx_proxy_port = ${environment:nginx_proxy_port}
nginx_http_port = ${environment:nginx_http_port}
nginx_extra_binds =
        listen ${:nginx_http_port};
nginx_cache_path = ${deployment:cache-directory}/nginx
nginx_cache_options = max_size=1g inactive=60m use_temp_path=off
nginx_extra_server_config =
		location /badges/ {
			alias ${buildout:sources-dir}/nti.content.badges/badges/$host/;
		}

[nginx-conf:macosx]
# AIO is not even a directive on osx
aio =

[tahrir]
dbname = Tahrir
user = ntitahrir
twophase = True
autocommit = False
driver = mysql+pymysql
password = ${passwords:sql_users_passwd}

[tahrir-conf]
recipe = z3c.recipe.filetemplate
source-directory = templates
dest-directory = ${deployment:root-directory}
files = 888-nti.app.tahrir.zcml

[pserve-conf]
dataserver_log_level = INFO
purchase_additional_confirmation_addresses = support@nextthought.com
email_externally = true

[gunicorn-conf]
preload_app = true

[library-conf]
library-type = filesystemLibrary
library-args =
		directory="${environment:global_content_directory}"
		prefix="${environment:global_content_location}"

[supervisor]
# Disable supervisord based log rotation because we have switched to using logrotate
logfile-maxbytes = 0
childstdout-logfile-maxbytes = 0
childstderr-logfile-maxbytes = 0
# Don't wipe away existing logs
nocleanup = True
pserve_group_programs = pserve,analytics,metadata,solr_indexer,library_renderer,scheduled_job_dispatcher,scheduled_job_executor
programs =
        999 pserve (stopwaitsecs=30) ${deployment:root-directory}/bin/nti_pserve [${:pserve-ini}]
        99 solr_indexer (autostart=false stopwaitsecs=30) ${deployment:bin-directory}/nti_solr_indexer [-v]
        99 analytics (autostart=false stopwaitsecs=30) ${deployment:bin-directory}/nti_analytics_processor [-v]
        99 metadata (autostart=false stopwaitsecs=30) ${deployment:bin-directory}/nti_metadata_processor [-v]
        99 library_renderer (autostart=false stopwaitsecs=30) ${deployment:bin-directory}/nti_library_renderer [-v -r 1 -s 2]
        99 scheduled_job_dispatcher (autostart=false stopwaitsecs=30) ${deployment:bin-directory}/nti_scheduled_dispatcher [-v]
        99 scheduled_job_executor (autostart=false stopwaitsecs=30) ${deployment:bin-directory}/nti_scheduled_executor [-v]
        99 nginx /usr/sbin/nginx [-c ${deployment:etc-directory}/nginx/nginx.conf]
        ${prometheus-supervisord:node_exporter}
        ${prometheus-supervisord:statsd_exporter}

[boto]
aws_access_key_id = 
aws_secret_access_key = ${passwords:aws_secret_access_key}

