[buildout]
extends =
		recipes.cfg
		logrotate.cfg
		loginapp.cfg
		nodeapps_prod.cfg
		sites.cfg
		supervisor.cfg

parts =
		logrotate-conf
		logrotate-cron
		on-site-logs-cron
		off-site-logs-cron
		directories
		supervisor
		nginx-conf
		nodeserver-env
		client-site-package-conf
		client-site-package
		site-ifsta-nginx

# We manage our checkouts using mr.developer, which
# easily allows pinning versions (revision=XXX)
# and provides the 'develop' command with many
# useful actions (like 'rebuild)
# See https://pypi.python.org/pypi/mr.developer/
extensions = mr.developer
mr.developer-threads = 35
sources-dir = sources
always-checkout = true
auto-checkout = *

[sources]
<= recipes-sources

[logrotate-cron]
logrotate-bin = /usr/sbin/logrotate

[on-site-logs-cron]
recipe = z3c.recipe.usercrontab
rsync-bin = /usr/bin/rsync
times = 5,20,35,50 * * * *
command = ${:rsync-bin} -a "${deployment:log-directory}" "ntibackup@aux1.4pp:/srv/backups/logs/assoc/$HOSTNAME/"

[off-site-logs-cron]
recipe = z3c.recipe.usercrontab
rsync-bin = /usr/bin/rsync
times = 10,25,40,55 * * * *
command = ${:rsync-bin} -a "${deployment:log-directory}" "10.50.30.64::logs/assoc/$HOSTNAME/"

[directories]
paths =
	  ${deployment:etc-directory}
	  ${deployment:run-directory}
	  ${deployment:log-directory}
	  ${deployment:cache-directory}/nginx

[node-service-env]
address = 0.0.0.0
analyticsKey = UA-25900586-18
dataserver-address = lb.assoc
dataserver-port = ${environment:haproxy_http_port}
login = /login/
openExternalPDFsInNewWindow = true
port = 8083

[nodeserver-env-keys-googleapi]
default = AIzaSyDai0rkocIcbeh9EuW3LQxhbNlEgkhSKG4

[environment]
smtp_server = email-smtp.us-east-1.amazonaws.com
smtp_username = AKIAIOO43PY4ANWEYP2Q
smtp_port = 587
global_host_name = assoc.nextthought.com
global_content_directory = ${buildout:directory}/../DataserverGlobalLibrary
global_content_location = /content/

haproxy_http_port = 2080

# Because of the order of inclusion, we need this here
webapp_path = ${buildout:sources-dir}/nti.web.app
loginapp_path = ${buildout:sources-dir}/nti.web.login

# The prefix that the webapp occupies in the
# URL space. This MUST end with a trailing slash,
# and MUST not be empty
webapp_location = /app/

# The prefix that the login app occupies in the
# URL space. This MUST end with a trailing slash.
loginapp_location = /login/

[nginx-conf]
recipe = z3c.recipe.filetemplate
source-directory = templates
dest-directory = ${deployment:root-directory}
# the main conf file is already installed
# as part of building nginx, we must overwrite it
force-overwrite = true
files = nginx.conf fastcgi.conf fastcgi_params koi-utf koi-win mime.types scgi_params uwsgi_params win-utf dataserver.conf

# Whether nginx should daemonize. Set it to
# off if you will be controlling it with
# supervisor, on if system will control it
nginx_daemon = off
aio = aio on;
# The location of the config file
# on disk for the webapp.
webapp_config_file = ${deployment:root-directory}/etc/webapp/config.js

# Logging knobs
nginx_access_log = /dev/stdout
nginx_access_log_options = main buffer=4k flush=1m
nginx_error_log = /dev/stderr
nginx_error_log_level = warn

# PID file
nginx_pidfile = ${deployment:run-directory}/nginx.pid

# Temp caches
client_body_temp_path = ${deployment:cache-directory}/nginx/client_temp
fastcgi_temp_path = ${deployment:cache-directory}/nginx/fastcgi_temp
proxy_temp_path = ${deployment:cache-directory}/nginx/proxy_temp
scgi_temp_path = ${deployment:cache-directory}/nginx/scgi_temp
uwsgi_temp_path = ${deployment:cache-directory}/nginx/uwsgi_temp

# Server name cache knobs
server_names_hash_bucket_size = 128
server_names_hash_max_size = 512

# The default landing site name. Set this in environments
# that only hae one landing site so that deep links
# work even without the site cookie.
default_landing_site_name = $host

# Copy these things in from the environment; eventually
# they should move directly here; the extends keyword is a
# bad idea if there are many unrelated settings
webapp_path = ${environment:webapp_path}
webapp_location = ${environment:webapp_location}
loginapp_path = ${environment:loginapp_path}
loginapp_location = ${environment:loginapp_location}
mobileweb_path = ${buildout:sources-dir}/nti.web.mobile
nginx_http_port = ${environment:nginx_http_port}
#nodejs_http_port = ${environment:nodejs_http_port}
global_host_name = ""
global_content_directory = ${environment:global_content_directory}
global_content_location = ${environment:global_content_location}
hosted_badge_images_directory = ${buildout:directory}/../hosted_badge_images
hosted_badge_images_location = /hosted_badge_images/
nginx_user = ntiuser
nginx_workers = 9
vendor_lib_path = ${buildout:root-directory}/node_modules/nti-lib-vendor/vendor
environment_support_path = ${buildout:root-directory}/node_modules/@nti/environment-support
robots_file = robots.txt

nginx_ip = 0.0.0.0
nginx_dataserver_port = lb.assoc:${environment:haproxy_http_port}
nginx_proxy_port = 8085
nginx_http_port = 8080
nginx_extra_binds =
        listen ${:nginx_http_port};

# How many files to keep in the open cache. This should be
# at least 60K in production (smaller in dev where ulimits
# are usually not set up)
nginx_max_open_files = 60000

# Block to allow addition nginx configuration is special scenarios
nginx_extra_server_config = #

[nginx-conf:macosx]
# AIO is not even a directive on osx
aio =

[web-app-features]
kaltura.progressive = false
show-open-students-first = true

[site-i2-nginx]
extra_config =
	location ~ ^/widgets/([A-Za-z0-9_-]+)$ {
		return 301 $uri_scheme://$host/widgets/$1/;
	}

	location ~ ^/widgets/([A-Za-z0-9_-]+)/$ {
		alias ${buildout:directory}/node_modules/nti-web-widget-$1/dist/;
	}

	location ~ ^/widgets/([A-Za-z0-9_-]+)/(.+)$ {
		alias ${buildout:directory}/node_modules/nti-web-widget-$1/dist/$2;
	}

[client-site-package-conf]
recipe = nti.recipes.json
output-file = ${buildout:directory}/package.json
contents-section = client-site-package-conf-main

[client-site-package-conf-main]
name = nti-buildout-assoc
version = 0.0.1
description = NextThought Buildout Assoc NodeJS Library
author = NextThought
private = true
dependencies-section = client-site-package-conf-deps

[client-site-package-conf-deps]
nti-client-sites-ifsta = 1.2.2
@nti/environment-support = 2018.0.0
nti-lib-vendor = 2018.0.0
@nti/web-app = 2018.13.3
@nti/web-login = 2018.8.0
@nti/web-mobile = 2018.13.0
@nti/web-service = 1.18.0

[client-site-package]
recipe = collective.recipe.cmd
on_install = true
on_update = true
site-asset-package = ${buildout:root-directory}
cmds =
	 pushd ${:site-asset-package}
	 npm install
	 npm update
	 popd

[supervisor]
# Disable supervisord based log rotation because we have switched to using logrotate
logfile-maxbytes = 0
childstdout-logfile-maxbytes = 0
childstderr-logfile-maxbytes = 0
# Don't wipe away existing logs
nocleanup = True
eventlisteners =
groups =
programs =
         1 nginx /usr/sbin/nginx [-c ${deployment:etc-directory}/nginx/nginx.conf]
         1 node /usr/bin/node [${deployment:root-directory}/node_modules/.bin/web-service --protocol proxy --env production --config ${deployment:root-directory}/etc/nodeserver-env.json]
